!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/uber/Programs/dwm/dwm-6.3/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(OBJ)	dmenu/Makefile	/^$(OBJ): arg.h config.h config.mk drw.h$/;"	t
${OBJ}	Makefile	/^${OBJ}: config.h config.mk$/;"	t
-1018,12 +1088,13	dwm-swallow-20201211-61bb8b2.diff	/^@@ -1018,12 +1088,13 @@ killclient(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1038,6 +1109,7	dwm-swallow-20201211-61bb8b2.diff	/^@@ -1038,6 +1109,7 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:a/dwm.c
-1074,6 +1146,8	dwm-swallow-20201211-61bb8b2.diff	/^@@ -1074,6 +1146,8 @@ manage(Window w, XWindowAttributes *wa)$/;"	h	modifiedFile:a/dwm.c
-11,6 +11,8	dmenu/dmenu-highlight-4.9.diff	/^@@ -11,6 +11,8 @@ static const char *colors[SchemeLast][2] = {$/;"	h	modifiedFile:a/config.def.h
-113,6 +113,43	dmenu/dmenu-highlight-4.9.diff	/^@@ -113,6 +113,43 @@ cistrstr(const char *s, const char *sub)$/;"	h	modifiedFile:a/dmenu.c
-116,6 +116,9	dwm-actualfullscreen-20211013-cb3f58a.diff	/^@@ -116,6 +116,9 @@ Zooms\/cycles focused window to\/from master area (tiled layouts only).$/;"	h	modifiedFile:a/dwm.1
-119,6 +119,7	dwm-fullgaps-6.2.diff	/^@@ -119,6 +119,7 @@ struct Monitor {$/;"	h	modifiedFile:a/dwm.c
-123,7 +160,9	dmenu/dmenu-highlight-4.9.diff	/^@@ -123,7 +160,9 @@ drawitem(struct item *item, int x, int y, int w)$/;"	h	modifiedFile:a/dmenu.c
-131,7 +131,7	dmenu/dmenu-lineheight-4.9.diff	/^@@ -131,7 +131,7 @@ drawmenu(void)$/;"	h	modifiedFile:a/dmenu.c
-138,6 +146,8	dwm-swallow-20201211-61bb8b2.diff	/^@@ -138,6 +146,8 @@ typedef struct {$/;"	h	modifiedFile:a/dwm.c
-1386,6 +1387,12	dwm-autostart-20161205-bb3bd6f.diff	/^@@ -1386,6 +1387,12 @@ run(void)$/;"	h	modifiedFile:a/dwm.c
-148,7 +148,7	dmenu/dmenu-lineheight-4.9.diff	/^@@ -148,7 +148,7 @@ drawmenu(void)$/;"	h	modifiedFile:a/dmenu.c
-1497,6 +1500,16	dwm-fullgaps-6.2.diff	/^@@ -1497,6 +1500,16 @@ setfullscreen(Client *c, int fullscreen)$/;"	h	modifiedFile:a/dwm.c
-15,6 +15,7	dmenu/dmenu-lineheight-4.9.diff	/^@@ -15,6 +15,7 @@ static const char *colors[SchemeLast][2] = {$/;"	h	modifiedFile:a/config.def.h
-1530,6 +1530,10	dwm-r1437-moveontagmon.diff	/^@@ -1530,6 +1530,10 @@$/;"	h	modifiedFile:a/dwm.c
-1683,16 +1696,16	dwm-fullgaps-6.2.diff	/^@@ -1683,16 +1696,16 @@ tile(Monitor *m)$/;"	h	modifiedFile:a/dwm.c
-1719,6 +1720,13	dwm-actualfullscreen-20211013-cb3f58a.diff	/^@@ -1719,6 +1720,13 @@ togglefloating(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-1768,6 +1842,20	dwm-swallow-20201211-61bb8b2.diff	/^@@ -1768,6 +1842,20 @@ unmanage(Client *c, int destroyed)$/;"	h	modifiedFile:a/dwm.c
-1782,9 +1870,12	dwm-swallow-20201211-61bb8b2.diff	/^@@ -1782,9 +1870,12 @@ unmanage(Client *c, int destroyed)$/;"	h	modifiedFile:a/dwm.c
-19,10 +19,11	dwm-swallow-20201211-61bb8b2.diff	/^@@ -19,10 +19,11 @@ FREETYPELIBS = -lfontconfig -lXft$/;"	h	modifiedFile:a/config.mk
-194,6 +194,7	dwm-autostart-20161205-bb3bd6f.diff	/^@@ -194,6 +194,7 @@ static void resizeclient(Client *c, int x, int y, int w, int h);$/;"	h	modifiedFile:a/dwm.c
-199,6 +200,7	dwm-fullgaps-6.2.diff	/^@@ -199,6 +200,7 @@ static void sendmon(Client *c, Monitor *m);$/;"	h	modifiedFile:a/dwm.c
-2,6 +2,7	dwm-fullgaps-6.2.diff	/^@@ -2,6 +2,7 @@$/;"	h	modifiedFile:a/config.def.h
-202,6 +202,8	dwm-fixborders-6.2.diff	/^@@ -202,6 +202,8 @@ drw_clr_create(Drw *drw, Clr *dest, const char *clrname)$/;"	h	modifiedFile:a/drw.c
-2047,6 +2138,136	dwm-swallow-20201211-61bb8b2.diff	/^@@ -2047,6 +2138,136 @@ view(const Arg *arg)$/;"	h	modifiedFile:a/dwm.c
-21,3 +21,6	dmenu/dmenu-border-4.9.diff	/^@@ -21,3 +21,6 @@ static unsigned int lines      = 0;$/;"	h	modifiedFile:dmenu-4.9-b/config.def.h
-211,6 +211,7	dwm-actualfullscreen-20211013-cb3f58a.diff	/^@@ -211,6 +211,7 @@ static void tagmon(const Arg *arg);$/;"	h	modifiedFile:a/dwm.c
-2138,10 +2359,12	dwm-swallow-20201211-61bb8b2.diff	/^@@ -2138,10 +2359,12 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-2145,6 +2152,7	dwm-autostart-20161205-bb3bd6f.diff	/^@@ -2145,6 +2152,7 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dwm.c
-235,6 +245,12	dwm-swallow-20201211-61bb8b2.diff	/^@@ -235,6 +245,12 @@ static int xerrordummy(Display *dpy, XErrorEvent *ee);$/;"	h	modifiedFile:a/dwm.c
-26,7 +26,7	dmenu/dmenu-highlight-4.9.diff	/^@@ -26,7 +26,7 @@$/;"	h	modifiedFile:a/dmenu.c
-26,9 +27,11	dwm-swallow-20201211-61bb8b2.diff	/^@@ -26,9 +27,11 @@ static const Rule rules[] = {$/;"	h	modifiedFile:a/config.def.h
-269,6 +285,8	dwm-swallow-20201211-61bb8b2.diff	/^@@ -269,6 +285,8 @@ static Drw *drw;$/;"	h	modifiedFile:a/dwm.c
-298,6 +316,8	dwm-swallow-20201211-61bb8b2.diff	/^@@ -298,6 +316,8 @@ applyrules(Client *c)$/;"	h	modifiedFile:a/dwm.c
-3,6 +3,7	dwm-swallow-20201211-61bb8b2.diff	/^@@ -3,6 +3,7 @@$/;"	h	modifiedFile:a/config.def.h
-3,7 +3,7	dmenu/dmenu-caseinsensitive-5.0.diff	/^@@ -3,7 +3,7 @@$/;"	h	modifiedFile:a/dmenu.1
-40,6 +40,12	dwm-swallow-20201211-61bb8b2.diff	/^@@ -40,6 +40,12 @@$/;"	h	modifiedFile:a/dwm.c
-414,6 +434,53	dwm-swallow-20201211-61bb8b2.diff	/^@@ -414,6 +434,53 @@ attachstack(Client *c)$/;"	h	modifiedFile:a/dwm.c
-44,8 +44,8	dmenu/dmenu-caseinsensitive-5.0.diff	/^@@ -44,8 +44,8 @@ dmenu appears at the bottom of the screen.$/;"	h	modifiedFile:a/dmenu.1
-50,6 +50,9	dmenu/dmenu-lineheight-4.9.diff	/^@@ -50,6 +50,9 @@ dmenu matches menu items case insensitively.$/;"	h	modifiedFile:a/dmenu.1
-55,8 +55,9	dmenu/dmenu-caseinsensitive-5.0.diff	/^@@ -55,8 +55,9 @@ static Clr *scheme[SchemeLast];$/;"	h	modifiedFile:a/dmenu.c
-598,6 +607,7	dmenu/dmenu-center-4.8.diff	/^@@ -598,6 +607,7 @@ setup(void)$/;"	h	modifiedFile:a/dmenu.c
-604,6 +604,7	dmenu/dmenu-lineheight-4.9.diff	/^@@ -604,6 +604,7 @@ setup(void)$/;"	h	modifiedFile:a/dmenu.c
-624,9 +634,9	dmenu/dmenu-center-4.8.diff	/^@@ -624,9 +634,9 @@ setup(void)$/;"	h	modifiedFile:a/dmenu.c
-634,11 +644,10	dmenu/dmenu-center-4.8.diff	/^@@ -634,11 +644,10 @@ setup(void)$/;"	h	modifiedFile:a/dmenu.c
-638,6 +640,7	dwm-fullgaps-6.2.diff	/^@@ -638,6 +640,7 @@ createmon(void)$/;"	h	modifiedFile:a/dwm.c
-653,6 +720,9	dwm-swallow-20201211-61bb8b2.diff	/^@@ -653,6 +720,9 @@ destroynotify(XEvent *e)$/;"	h	modifiedFile:a/dwm.c
-654,9 +654,10	dmenu/dmenu-border-4.9.diff	/^@@ -654,9 +654,10 @@ setup(void)$/;"	h	modifiedFile:dmenu-4.9-b/dmenu.c
-683,6 +684,7	dmenu/dmenu-lineheight-4.9.diff	/^@@ -683,6 +684,7 @@ static void$/;"	h	modifiedFile:a/dmenu.c
-709,9 +710,9	dmenu/dmenu-caseinsensitive-5.0.diff	/^@@ -709,9 +710,9 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dmenu.c
-716,6 +718,10	dmenu/dmenu-lineheight-4.9.diff	/^@@ -716,6 +718,10 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/dmenu.c
-719,9 +719,10	dwm-activetagindicatorbar-6.2.diff	/^@@ -719,9 +719,10 @@ drawbar(Monitor *m)$/;"	h	modifiedFile:dwm-a/dwm.c
-78,6 +78,7	dwm-actualfullscreen-20211013-cb3f58a.diff	/^@@ -78,6 +78,7 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-84,6 +85,9	dwm-fullgaps-6.2.diff	/^@@ -84,6 +85,9 @@ static Key keys[] = {$/;"	h	modifiedFile:a/config.def.h
-88,6 +88,15	dmenu/dmenu-center-4.8.diff	/^@@ -88,6 +88,15 @@ calcoffsets(void)$/;"	h	modifiedFile:a/dmenu.c
-92,9 +98,11	dwm-swallow-20201211-61bb8b2.diff	/^@@ -92,9 +98,11 @@ struct Client {$/;"	h	modifiedFile:a/dwm.c
.c.o	Makefile	/^.c.o:$/;"	t
.c.o	dmenu/Makefile	/^.c.o:$/;"	t
ALT	config.h	/^#define ALT /;"	d
ARGBEGIN	dmenu/arg.h	/^#define ARGBEGIN	/;"	d
ARGC	dmenu/arg.h	/^#define ARGC(/;"	d
ARGEND	dmenu/arg.h	/^#define ARGEND	/;"	d
ARGF	dmenu/arg.h	/^#define ARGF(/;"	d
ARG_H__	dmenu/arg.h	/^#define ARG_H__$/;"	d
Arg	.dwm_backup.c	/^} Arg;$/;"	t	typeref:union:__anon4aab0261060a	file:
Arg	dwm.c	/^} Arg;$/;"	t	typeref:union:__anon0f53a99e060a	file:
Arg	dwm_back.c	/^} Arg;$/;"	t	typeref:union:__anon0438348e060a	file:
BETWEEN	dmenu/util.h	/^#define BETWEEN(/;"	d
BETWEEN	util.h	/^#define BETWEEN(/;"	d
BUGS	dwm.1	/^.SH BUGS$/;"	s	title:DWM
BUTTONMASK	.dwm_backup.c	/^#define BUTTONMASK /;"	d	file:
BUTTONMASK	dwm.c	/^#define BUTTONMASK /;"	d	file:
BUTTONMASK	dwm_back.c	/^#define BUTTONMASK /;"	d	file:
Button	.dwm_backup.c	/^} Button;$/;"	t	typeref:struct:__anon4aab02610708	file:
Button	dwm.c	/^} Button;$/;"	t	typeref:struct:__anon0f53a99e0708	file:
Button	dwm_back.c	/^} Button;$/;"	t	typeref:struct:__anon0438348e0708	file:
CC	config.mk	/^CC = cc$/;"	m
CC	dmenu/config.mk	/^CC = cc$/;"	m
CFLAGS	config.mk	/^CFLAGS   = -std=c99 -pedantic -Wall -Wno-deprecated-declarations -Os ${INCS} ${CPPFLAGS}$/;"	m
CFLAGS	dmenu/config.mk	/^CFLAGS   = -std=c99 -pedantic -Wall -Os $(INCS) $(CPPFLAGS)$/;"	m
CLEANMASK	.dwm_backup.c	/^#define CLEANMASK(/;"	d	file:
CLEANMASK	dwm.c	/^#define CLEANMASK(/;"	d	file:
CLEANMASK	dwm_back.c	/^#define CLEANMASK(/;"	d	file:
CPPFLAGS	config.mk	/^CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_POSIX_C_SOURCE=200809L -DVERSION=\\"${VERSION}\\" /;"	m
CPPFLAGS	dmenu/config.mk	/^CPPFLAGS = -D_DEFAULT_SOURCE -D_BSD_SOURCE -D_XOPEN_SOURCE=700 -D_POSIX_C_SOURCE=200809L -DVERSI/;"	m
CUSTOMIZATION	dwm.1	/^.SH CUSTOMIZATION$/;"	s	title:DWM
Client	.dwm_backup.c	/^struct Client {$/;"	s	file:
Client	.dwm_backup.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
Client	dwm.c	/^struct Client {$/;"	s	file:
Client	dwm.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
Client	dwm_back.c	/^struct Client {$/;"	s	file:
Client	dwm_back.c	/^typedef struct Client Client;$/;"	t	typeref:struct:Client	file:
ClkClientWin	.dwm_backup.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon4aab02610503	file:
ClkClientWin	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:
ClkClientWin	dwm_back.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0438348e0503	file:
ClkLast	.dwm_backup.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon4aab02610503	file:
ClkLast	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:
ClkLast	dwm_back.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0438348e0503	file:
ClkLtSymbol	.dwm_backup.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon4aab02610503	file:
ClkLtSymbol	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
ClkLtSymbol	dwm_back.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0438348e0503	file:
ClkRootWin	.dwm_backup.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon4aab02610503	file:
ClkRootWin	dwm.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0f53a99e0503	file:
ClkRootWin	dwm_back.c	/^       ClkClientWin, ClkRootWin, ClkLast }; \/* clicks *\/$/;"	e	enum:__anon0438348e0503	file:
ClkStatusText	.dwm_backup.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon4aab02610503	file:
ClkStatusText	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
ClkStatusText	dwm_back.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0438348e0503	file:
ClkTagBar	.dwm_backup.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon4aab02610503	file:
ClkTagBar	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
ClkTagBar	dwm_back.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0438348e0503	file:
ClkWinTitle	.dwm_backup.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon4aab02610503	file:
ClkWinTitle	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0f53a99e0503	file:
ClkWinTitle	dwm_back.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	e	enum:__anon0438348e0503	file:
Clr	dmenu/drw.h	/^typedef XftColor Clr;$/;"	t	typeref:typename:XftColor
Clr	drw.h	/^typedef XftColor Clr;$/;"	t	typeref:typename:XftColor
ColBg	dmenu/drw.h	/^enum { ColFg, ColBg }; \/* Clr scheme index *\/$/;"	e	enum:__anond8d4be500203
ColBg	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColBorder	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
ColFg	dmenu/drw.h	/^enum { ColFg, ColBg }; \/* Clr scheme index *\/$/;"	e	enum:__anond8d4be500203
ColFg	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	e	enum:__anon0f5116480203
Cur	dmenu/drw.h	/^} Cur;$/;"	t	typeref:struct:__anond8d4be500108
Cur	drw.h	/^} Cur;$/;"	t	typeref:struct:__anon0f5116480108
CurLast	.dwm_backup.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon4aab02610103	file:
CurLast	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
CurLast	dwm_back.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0438348e0103	file:
CurMove	.dwm_backup.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon4aab02610103	file:
CurMove	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
CurMove	dwm_back.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0438348e0103	file:
CurNormal	.dwm_backup.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon4aab02610103	file:
CurNormal	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
CurNormal	dwm_back.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0438348e0103	file:
CurResize	.dwm_backup.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon4aab02610103	file:
CurResize	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0f53a99e0103	file:
CurResize	dwm_back.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	e	enum:__anon0438348e0103	file:
DESCRIPTION	dmenu/dmenu.1	/^.SH DESCRIPTION$/;"	s	title:DMENU
DESCRIPTION	dmenu/stest.1	/^.SH DESCRIPTION$/;"	s	title:STEST
DESCRIPTION	dwm.1	/^.SH DESCRIPTION$/;"	s	title:DWM
DMENU	dmenu/dmenu.1	/^.TH DMENU 1 dmenu\\-VERSION$/;"	t
DWM	dwm.1	/^.TH DWM 1 dwm\\-VERSION$/;"	t
Drw	dmenu/drw.h	/^} Drw;$/;"	t	typeref:struct:__anond8d4be500308
Drw	drw.h	/^} Drw;$/;"	t	typeref:struct:__anon0f5116480308
EARGF	dmenu/arg.h	/^#define EARGF(/;"	d
EXIT	dmenu/stest.1	/^.SH EXIT STATUS$/;"	s	title:STEST
FILES	dwm.1	/^.SH FILES$/;"	s	title:DWM
FLAG	dmenu/stest.c	/^#define FLAG(/;"	d	file:
FREETYPEINC	config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPEINC	dmenu/config.mk	/^FREETYPEINC = \/usr\/include\/freetype2$/;"	m
FREETYPELIBS	config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
FREETYPELIBS	dmenu/config.mk	/^FREETYPELIBS = -lfontconfig -lXft$/;"	m
Fnt	dmenu/drw.h	/^typedef struct Fnt {$/;"	s
Fnt	dmenu/drw.h	/^} Fnt;$/;"	t	typeref:struct:Fnt
Fnt	drw.h	/^typedef struct Fnt {$/;"	s
Fnt	drw.h	/^} Fnt;$/;"	t	typeref:struct:Fnt
HEIGHT	.dwm_backup.c	/^#define HEIGHT(/;"	d	file:
HEIGHT	dwm.c	/^#define HEIGHT(/;"	d	file:
HEIGHT	dwm_back.c	/^#define HEIGHT(/;"	d	file:
INCS	config.mk	/^INCS = -I${X11INC} -I${FREETYPEINC}$/;"	m
INCS	dmenu/config.mk	/^INCS = -I$(X11INC) -I$(FREETYPEINC)$/;"	m
INTERSECT	.dwm_backup.c	/^#define INTERSECT(/;"	d	file:
INTERSECT	dmenu/dmenu.c	/^#define INTERSECT(/;"	d	file:
INTERSECT	dmenu/dmenu_reserve.h	/^#define INTERSECT(/;"	d
INTERSECT	dwm.c	/^#define INTERSECT(/;"	d	file:
INTERSECT	dwm_back.c	/^#define INTERSECT(/;"	d	file:
ISSUES	dwm.1	/^.SH ISSUES$/;"	s	title:DWM
ISVISIBLE	.dwm_backup.c	/^#define ISVISIBLE(/;"	d	file:
ISVISIBLE	dwm.c	/^#define ISVISIBLE(/;"	d	file:
ISVISIBLE	dwm_back.c	/^#define ISVISIBLE(/;"	d	file:
Key	.dwm_backup.c	/^} Key;$/;"	t	typeref:struct:__anon4aab02610808	file:
Key	dwm.c	/^} Key;$/;"	t	typeref:struct:__anon0f53a99e0808	file:
Key	dwm_back.c	/^} Key;$/;"	t	typeref:struct:__anon0438348e0808	file:
LDFLAGS	config.mk	/^LDFLAGS  = ${LIBS}$/;"	m
LDFLAGS	dmenu/config.mk	/^LDFLAGS  = $(LIBS)$/;"	m
LENGTH	.dwm_backup.c	/^#define LENGTH(/;"	d	file:
LENGTH	dmenu/dmenu.c	/^#define LENGTH(/;"	d	file:
LENGTH	dmenu/dmenu_reserve.h	/^#define LENGTH(/;"	d
LENGTH	dwm.c	/^#define LENGTH(/;"	d	file:
LENGTH	dwm_back.c	/^#define LENGTH(/;"	d	file:
LIBS	config.mk	/^LIBS = -L${X11LIB} -lX11 ${XINERAMALIBS} ${FREETYPELIBS}$/;"	m
LIBS	dmenu/config.mk	/^LIBS = -L$(X11LIB) -lX11 $(XINERAMALIBS) $(FREETYPELIBS)$/;"	m
Layout	.dwm_backup.c	/^} Layout;$/;"	t	typeref:struct:__anon4aab02610908	file:
Layout	dwm.c	/^} Layout;$/;"	t	typeref:struct:__anon0f53a99e0908	file:
Layout	dwm_back.c	/^} Layout;$/;"	t	typeref:struct:__anon0438348e0908	file:
MANPREFIX	config.mk	/^MANPREFIX = ${PREFIX}\/share\/man$/;"	m
MANPREFIX	dmenu/config.mk	/^MANPREFIX = $(PREFIX)\/share\/man$/;"	m
MAX	dmenu/util.h	/^#define MAX(/;"	d
MAX	util.h	/^#define MAX(/;"	d
MIN	dmenu/util.h	/^#define MIN(/;"	d
MIN	util.h	/^#define MIN(/;"	d
MODKEY	config.def.h	/^#define MODKEY /;"	d
MODKEY	config.h	/^#define MODKEY /;"	d
MODKEY	config_bak.h	/^#define MODKEY /;"	d
MOUSEMASK	.dwm_backup.c	/^#define MOUSEMASK /;"	d	file:
MOUSEMASK	dwm.c	/^#define MOUSEMASK /;"	d	file:
MOUSEMASK	dwm_back.c	/^#define MOUSEMASK /;"	d	file:
Monitor	.dwm_backup.c	/^struct Monitor {$/;"	s	file:
Monitor	.dwm_backup.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
Monitor	dwm.c	/^struct Monitor {$/;"	s	file:
Monitor	dwm.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
Monitor	dwm_back.c	/^struct Monitor {$/;"	s	file:
Monitor	dwm_back.c	/^typedef struct Monitor Monitor;$/;"	t	typeref:struct:Monitor	file:
NAME	dmenu/dmenu.1	/^.SH NAME$/;"	s	title:DMENU
NAME	dmenu/stest.1	/^.SH NAME$/;"	s	title:STEST
NAME	dwm.1	/^.SH NAME$/;"	s	title:DWM
NetActiveWindow	.dwm_backup.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon4aab02610303	file:
NetActiveWindow	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetActiveWindow	dwm_back.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0438348e0303	file:
NetClientList	.dwm_backup.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon4aab02610303	file:
NetClientList	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:
NetClientList	dwm_back.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0438348e0303	file:
NetLast	.dwm_backup.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon4aab02610303	file:
NetLast	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:
NetLast	dwm_back.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0438348e0303	file:
NetSupported	.dwm_backup.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon4aab02610303	file:
NetSupported	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetSupported	dwm_back.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0438348e0303	file:
NetWMCheck	.dwm_backup.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon4aab02610303	file:
NetWMCheck	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMCheck	dwm_back.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0438348e0303	file:
NetWMFullscreen	.dwm_backup.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon4aab02610303	file:
NetWMFullscreen	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMFullscreen	dwm_back.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0438348e0303	file:
NetWMName	.dwm_backup.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon4aab02610303	file:
NetWMName	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMName	dwm_back.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0438348e0303	file:
NetWMState	.dwm_backup.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon4aab02610303	file:
NetWMState	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMState	dwm_back.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	e	enum:__anon0438348e0303	file:
NetWMWindowType	.dwm_backup.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon4aab02610303	file:
NetWMWindowType	dwm.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0f53a99e0303	file:
NetWMWindowType	dwm_back.c	/^       NetWMFullscreen, NetActiveWindow, NetWMWindowType,$/;"	e	enum:__anon0438348e0303	file:
NetWMWindowTypeDialog	.dwm_backup.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon4aab02610303	file:
NetWMWindowTypeDialog	dwm.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0f53a99e0303	file:
NetWMWindowTypeDialog	dwm_back.c	/^       NetWMWindowTypeDialog, NetClientList, NetLast }; \/* EWMH atoms *\/$/;"	e	enum:__anon0438348e0303	file:
NumTags	.dwm_backup.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	s	file:
NumTags	dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	s	file:
NumTags	dwm_back.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	s	file:
OBJ	Makefile	/^OBJ = ${SRC:.c=.o}$/;"	m
OBJ	dmenu/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OPTIONS	dmenu/dmenu.1	/^.SH OPTIONS$/;"	s	title:DMENU
OPTIONS	dmenu/stest.1	/^.SH OPTIONS$/;"	s	title:STEST
OPTIONS	dwm.1	/^.SH OPTIONS$/;"	s	title:DWM
PREFIX	config.mk	/^PREFIX = \/usr\/local$/;"	m
PREFIX	dmenu/config.mk	/^PREFIX = \/usr\/local$/;"	m
Rule	.dwm_backup.c	/^} Rule;$/;"	t	typeref:struct:__anon4aab02610a08	file:
Rule	dwm.c	/^} Rule;$/;"	t	typeref:struct:__anon0f53a99e0a08	file:
Rule	dwm_back.c	/^} Rule;$/;"	t	typeref:struct:__anon0438348e0a08	file:
SEE	dmenu/dmenu.1	/^.SH SEE ALSO$/;"	s	title:DMENU
SEE	dmenu/stest.1	/^.SH SEE ALSO$/;"	s	title:STEST
SEE	dwm.1	/^.SH SEE ALSO$/;"	s	title:DWM
SHCMD	config.def.h	/^#define SHCMD(/;"	d
SHCMD	config.h	/^#define SHCMD(/;"	d
SHCMD	config_bak.h	/^#define SHCMD(/;"	d
SRC	Makefile	/^SRC = drw.c dwm.c util.c$/;"	m
SRC	dmenu/Makefile	/^SRC = drw.c dmenu.c stest.c util.c$/;"	m
STEST	dmenu/stest.1	/^.TH STEST 1 dmenu\\-VERSION$/;"	t
SYNOPSIS	dmenu/dmenu.1	/^.SH SYNOPSIS$/;"	s	title:DMENU
SYNOPSIS	dmenu/stest.1	/^.SH SYNOPSIS$/;"	s	title:STEST
SYNOPSIS	dwm.1	/^.SH SYNOPSIS$/;"	s	title:DWM
SchemeLast	dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anon543163f70103	file:
SchemeLast	dmenu/dmenu_reserve.h	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anond09272770103
SchemeNorm	.dwm_backup.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon4aab02610203	file:
SchemeNorm	dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anon543163f70103	file:
SchemeNorm	dmenu/dmenu_reserve.h	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anond09272770103
SchemeNorm	dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon0f53a99e0203	file:
SchemeNorm	dwm_back.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon0438348e0203	file:
SchemeNormHighlight	dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anon543163f70103	file:
SchemeNormHighlight	dmenu/dmenu_reserve.h	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anond09272770103
SchemeOut	dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anon543163f70103	file:
SchemeOut	dmenu/dmenu_reserve.h	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anond09272770103
SchemeSel	.dwm_backup.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon4aab02610203	file:
SchemeSel	dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anon543163f70103	file:
SchemeSel	dmenu/dmenu_reserve.h	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anond09272770103
SchemeSel	dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon0f53a99e0203	file:
SchemeSel	dwm_back.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	e	enum:__anon0438348e0203	file:
SchemeSelHighlight	dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anon543163f70103	file:
SchemeSelHighlight	dmenu/dmenu_reserve.h	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	e	enum:__anond09272770103
TAGKEYS	config.def.h	/^#define TAGKEYS(/;"	d
TAGKEYS	config.h	/^#define TAGKEYS(/;"	d
TAGKEYS	config_bak.h	/^#define TAGKEYS(/;"	d
TAGMASK	.dwm_backup.c	/^#define TAGMASK /;"	d	file:
TAGMASK	dwm.c	/^#define TAGMASK /;"	d	file:
TAGMASK	dwm_back.c	/^#define TAGMASK /;"	d	file:
TEXTW	.dwm_backup.c	/^#define TEXTW(/;"	d	file:
TEXTW	dmenu/dmenu.c	/^#define TEXTW(/;"	d	file:
TEXTW	dmenu/dmenu_reserve.h	/^#define TEXTW(/;"	d
TEXTW	dwm.c	/^#define TEXTW(/;"	d	file:
TEXTW	dwm_back.c	/^#define TEXTW(/;"	d	file:
USAGE	dmenu/dmenu.1	/^.SH USAGE$/;"	s	title:DMENU
USAGE	dwm.1	/^.SH USAGE$/;"	s	title:DWM
UTF_INVALID	dmenu/drw.c	/^#define UTF_INVALID /;"	d	file:
UTF_INVALID	drw.c	/^#define UTF_INVALID /;"	d	file:
UTF_SIZ	dmenu/drw.c	/^#define UTF_SIZ /;"	d	file:
UTF_SIZ	drw.c	/^#define UTF_SIZ /;"	d	file:
VERSION	config.mk	/^VERSION = 6.3$/;"	m
VERSION	dmenu/config.mk	/^VERSION = 5.0$/;"	m
WIDTH	.dwm_backup.c	/^#define WIDTH(/;"	d	file:
WIDTH	dwm.c	/^#define WIDTH(/;"	d	file:
WIDTH	dwm_back.c	/^#define WIDTH(/;"	d	file:
WMDelete	.dwm_backup.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon4aab02610403	file:
WMDelete	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMDelete	dwm_back.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0438348e0403	file:
WMLast	.dwm_backup.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon4aab02610403	file:
WMLast	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMLast	dwm_back.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0438348e0403	file:
WMProtocols	.dwm_backup.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon4aab02610403	file:
WMProtocols	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMProtocols	dwm_back.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0438348e0403	file:
WMState	.dwm_backup.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon4aab02610403	file:
WMState	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMState	dwm_back.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0438348e0403	file:
WMTakeFocus	.dwm_backup.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon4aab02610403	file:
WMTakeFocus	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0f53a99e0403	file:
WMTakeFocus	dwm_back.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	e	enum:__anon0438348e0403	file:
X11INC	config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11INC	dmenu/config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11LIB	config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
X11LIB	dmenu/config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
XINERAMAFLAGS	config.mk	/^XINERAMAFLAGS = -DXINERAMA$/;"	m
XINERAMAFLAGS	dmenu/config.mk	/^XINERAMAFLAGS = -DXINERAMA$/;"	m
XINERAMALIBS	config.mk	/^XINERAMALIBS  = -lXinerama$/;"	m
XINERAMALIBS	dmenu/config.mk	/^XINERAMALIBS  = -lXinerama$/;"	m
__anon0438348e0103	dwm_back.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	g	file:
__anon0438348e0203	dwm_back.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	g	file:
__anon0438348e0303	dwm_back.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	g	file:
__anon0438348e0403	dwm_back.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	g	file:
__anon0438348e0503	dwm_back.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	g	file:
__anon0438348e060a	dwm_back.c	/^typedef union {$/;"	u	file:
__anon0438348e0708	dwm_back.c	/^typedef struct {$/;"	s	file:
__anon0438348e0808	dwm_back.c	/^typedef struct {$/;"	s	file:
__anon0438348e0908	dwm_back.c	/^typedef struct {$/;"	s	file:
__anon0438348e0a08	dwm_back.c	/^typedef struct {$/;"	s	file:
__anon0f5116480108	drw.h	/^typedef struct {$/;"	s
__anon0f5116480203	drw.h	/^enum { ColFg, ColBg, ColBorder }; \/* Clr scheme index *\/$/;"	g
__anon0f5116480308	drw.h	/^typedef struct {$/;"	s
__anon0f53a99e0103	dwm.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	g	file:
__anon0f53a99e0203	dwm.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	g	file:
__anon0f53a99e0303	dwm.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	g	file:
__anon0f53a99e0403	dwm.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	g	file:
__anon0f53a99e0503	dwm.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	g	file:
__anon0f53a99e060a	dwm.c	/^typedef union {$/;"	u	file:
__anon0f53a99e0708	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0808	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0908	dwm.c	/^typedef struct {$/;"	s	file:
__anon0f53a99e0a08	dwm.c	/^typedef struct {$/;"	s	file:
__anon4aab02610103	.dwm_backup.c	/^enum { CurNormal, CurResize, CurMove, CurLast }; \/* cursor *\/$/;"	g	file:
__anon4aab02610203	.dwm_backup.c	/^enum { SchemeNorm, SchemeSel }; \/* color schemes *\/$/;"	g	file:
__anon4aab02610303	.dwm_backup.c	/^enum { NetSupported, NetWMName, NetWMState, NetWMCheck,$/;"	g	file:
__anon4aab02610403	.dwm_backup.c	/^enum { WMProtocols, WMDelete, WMState, WMTakeFocus, WMLast }; \/* default atoms *\/$/;"	g	file:
__anon4aab02610503	.dwm_backup.c	/^enum { ClkTagBar, ClkLtSymbol, ClkStatusText, ClkWinTitle,$/;"	g	file:
__anon4aab0261060a	.dwm_backup.c	/^typedef union {$/;"	u	file:
__anon4aab02610708	.dwm_backup.c	/^typedef struct {$/;"	s	file:
__anon4aab02610808	.dwm_backup.c	/^typedef struct {$/;"	s	file:
__anon4aab02610908	.dwm_backup.c	/^typedef struct {$/;"	s	file:
__anon4aab02610a08	.dwm_backup.c	/^typedef struct {$/;"	s	file:
__anon543163f70103	dmenu/dmenu.c	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	g	file:
__anond09272770103	dmenu/dmenu_reserve.h	/^enum { SchemeNorm, SchemeSel, SchemeOut, SchemeNormHighlight, SchemeSelHighlight, SchemeLast }; /;"	g
__anond8d4be500108	dmenu/drw.h	/^typedef struct {$/;"	s
__anond8d4be500203	dmenu/drw.h	/^enum { ColFg, ColBg }; \/* Clr scheme index *\/$/;"	g
__anond8d4be500308	dmenu/drw.h	/^typedef struct {$/;"	s
a/config.def.h	dmenu/dmenu-highlight-4.9.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	dmenu/dmenu-lineheight-4.9.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	dwm-actualfullscreen-20211013-cb3f58a.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	dwm-fullgaps-6.2.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	dwm-swallow-20201211-61bb8b2.diff	/^--- a\/config.def.h$/;"	m
a/config.mk	dwm-swallow-20201211-61bb8b2.diff	/^--- a\/config.mk$/;"	m
a/dmenu.1	dmenu/dmenu-caseinsensitive-5.0.diff	/^--- a\/dmenu.1$/;"	m
a/dmenu.1	dmenu/dmenu-lineheight-4.9.diff	/^--- a\/dmenu.1$/;"	m
a/dmenu.c	dmenu/dmenu-caseinsensitive-5.0.diff	/^--- a\/dmenu.c$/;"	m
a/dmenu.c	dmenu/dmenu-center-4.8.diff	/^--- a\/dmenu.c$/;"	m
a/dmenu.c	dmenu/dmenu-highlight-4.9.diff	/^--- a\/dmenu.c$/;"	m
a/dmenu.c	dmenu/dmenu-lineheight-4.9.diff	/^--- a\/dmenu.c$/;"	m
a/drw.c	dwm-fixborders-6.2.diff	/^--- a\/drw.c$/;"	m
a/dwm.1	dwm-actualfullscreen-20211013-cb3f58a.diff	/^--- a\/dwm.1$/;"	m
a/dwm.c	dwm-actualfullscreen-20211013-cb3f58a.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	dwm-autostart-20161205-bb3bd6f.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	dwm-fullgaps-6.2.diff	/^--- a\/dwm.c$/;"	m
a/dwm.c	dwm-r1437-moveontagmon.diff	/^--- a\/dwm.c	Wed Jul 01 19:15:20 2009 +0100$/;"	m
a/dwm.c	dwm-swallow-20201211-61bb8b2.diff	/^--- a\/dwm.c$/;"	m
all	Makefile	/^all: options dwm$/;"	t
all	dmenu/Makefile	/^all: options dmenu stest$/;"	t
appenditem	dmenu/dmenu.c	/^appenditem(struct item *item, struct item **list, struct item **last)$/;"	f	typeref:typename:void	file:
appenditem	dmenu/dmenu_reserve.h	/^appenditem(struct item *item, struct item **list, struct item **last)$/;"	f	typeref:typename:void
applyrules	.dwm_backup.c	/^applyrules(Client *c)$/;"	f	typeref:typename:void
applyrules	dwm.c	/^applyrules(Client *c)$/;"	f	typeref:typename:void
applyrules	dwm_back.c	/^applyrules(Client *c)$/;"	f	typeref:typename:void
applysizehints	.dwm_backup.c	/^applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f	typeref:typename:int
applysizehints	dwm.c	/^applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f	typeref:typename:int
applysizehints	dwm_back.c	/^applysizehints(Client *c, int *x, int *y, int *w, int *h, int interact)$/;"	f	typeref:typename:int
arg	.dwm_backup.c	/^  const Arg arg;$/;"	m	struct:__anon4aab02610708	typeref:typename:const Arg	file:
arg	.dwm_backup.c	/^  const Arg arg;$/;"	m	struct:__anon4aab02610808	typeref:typename:const Arg	file:
arg	dwm.c	/^  const Arg arg;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:const Arg	file:
arg	dwm.c	/^  const Arg arg;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:const Arg	file:
arg	dwm_back.c	/^  const Arg arg;$/;"	m	struct:__anon0438348e0708	typeref:typename:const Arg	file:
arg	dwm_back.c	/^  const Arg arg;$/;"	m	struct:__anon0438348e0808	typeref:typename:const Arg	file:
argv0	dmenu/stest.c	/^char *argv0;$/;"	v	typeref:typename:char *
arrange	.dwm_backup.c	/^  void (*arrange)(Monitor *);$/;"	m	struct:__anon4aab02610908	typeref:typename:void (*)(Monitor *)	file:
arrange	.dwm_backup.c	/^arrange(Monitor *m)$/;"	f	typeref:typename:void
arrange	dwm.c	/^  void (*arrange)(Monitor *);$/;"	m	struct:__anon0f53a99e0908	typeref:typename:void (*)(Monitor *)	file:
arrange	dwm.c	/^arrange(Monitor *m)$/;"	f	typeref:typename:void
arrange	dwm_back.c	/^  void (*arrange)(Monitor *);$/;"	m	struct:__anon0438348e0908	typeref:typename:void (*)(Monitor *)	file:
arrange	dwm_back.c	/^arrange(Monitor *m)$/;"	f	typeref:typename:void
arrangemon	.dwm_backup.c	/^arrangemon(Monitor *m)$/;"	f	typeref:typename:void
arrangemon	dwm.c	/^arrangemon(Monitor *m)$/;"	f	typeref:typename:void
arrangemon	dwm_back.c	/^arrangemon(Monitor *m)$/;"	f	typeref:typename:void
attach	.dwm_backup.c	/^attach(Client *c)$/;"	f	typeref:typename:void
attach	dwm.c	/^attach(Client *c)$/;"	f	typeref:typename:void
attach	dwm_back.c	/^attach(Client *c)$/;"	f	typeref:typename:void
attachstack	.dwm_backup.c	/^attachstack(Client *c)$/;"	f	typeref:typename:void
attachstack	dwm.c	/^attachstack(Client *c)$/;"	f	typeref:typename:void
attachstack	dwm_back.c	/^attachstack(Client *c)$/;"	f	typeref:typename:void
barwin	.dwm_backup.c	/^  Window barwin;$/;"	m	struct:Monitor	typeref:typename:Window	file:
barwin	dwm.c	/^  Window barwin;$/;"	m	struct:Monitor	typeref:typename:Window	file:
barwin	dwm_back.c	/^  Window barwin;$/;"	m	struct:Monitor	typeref:typename:Window	file:
baseh	.dwm_backup.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
baseh	dwm.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
baseh	dwm_back.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
basew	.dwm_backup.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
basew	dwm.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
basew	dwm_back.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
bh	.dwm_backup.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
bh	dmenu/dmenu.c	/^static int bh, mw, mh;$/;"	v	typeref:typename:int	file:
bh	dmenu/dmenu_reserve.h	/^static int bh, mw, mh;$/;"	v	typeref:typename:int
bh	dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
bh	dwm_back.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
blw	.dwm_backup.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
blw	dwm.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
blw	dwm_back.c	/^static int bh, blw = 0;      \/* bar geometry *\/$/;"	v	typeref:typename:int	file:
border_width	dmenu/config.def.h	/^static const unsigned int border_width = 5;$/;"	v	typeref:typename:const unsigned int
border_width	dmenu/dmenu.c	/^static int border_width = 2;$/;"	v	typeref:typename:int	file:
border_width	dmenu/dmenu_reserve.h	/^static int border_width = 2;$/;"	v	typeref:typename:int
borderpx	config.def.h	/^static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
borderpx	config.h	/^static const unsigned int borderpx  = 3;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
borderpx	config_bak.h	/^static const unsigned int borderpx  = 2;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
broken	.dwm_backup.c	/^static const char broken[] = "broken";$/;"	v	typeref:typename:const char[]	file:
broken	dwm.c	/^static const char broken[] = "broken";$/;"	v	typeref:typename:const char[]	file:
broken	dwm_back.c	/^static const char broken[] = "broken";$/;"	v	typeref:typename:const char[]	file:
button	.dwm_backup.c	/^  unsigned int button;$/;"	m	struct:__anon4aab02610708	typeref:typename:unsigned int	file:
button	dwm.c	/^  unsigned int button;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
button	dwm_back.c	/^  unsigned int button;$/;"	m	struct:__anon0438348e0708	typeref:typename:unsigned int	file:
buttonpress	.dwm_backup.c	/^buttonpress(XEvent *e)$/;"	f	typeref:typename:void
buttonpress	dwm.c	/^buttonpress(XEvent *e)$/;"	f	typeref:typename:void
buttonpress	dwm_back.c	/^buttonpress(XEvent *e)$/;"	f	typeref:typename:void
buttons	config.def.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
buttons	config.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
buttons	config_bak.h	/^static Button buttons[] = {$/;"	v	typeref:typename:Button[]
bw	.dwm_backup.c	/^  int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
bw	dwm.c	/^  int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
bw	dwm_back.c	/^  int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
by	.dwm_backup.c	/^  int by;               \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
by	dwm.c	/^  int by;               \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
by	dwm_back.c	/^  int by;               \/* bar geometry *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
calcoffsets	dmenu/dmenu.c	/^calcoffsets(void)$/;"	f	typeref:typename:void	file:
calcoffsets	dmenu/dmenu_reserve.h	/^calcoffsets(void)$/;"	f	typeref:typename:void
checkotherwm	.dwm_backup.c	/^checkotherwm(void)$/;"	f	typeref:typename:void
checkotherwm	dwm.c	/^checkotherwm(void)$/;"	f	typeref:typename:void
checkotherwm	dwm_back.c	/^checkotherwm(void)$/;"	f	typeref:typename:void
cistrstr	dmenu/dmenu.c	/^cistrstr(const char *s, const char *sub)$/;"	f	typeref:typename:char *	file:
cistrstr	dmenu/dmenu_reserve.h	/^cistrstr(const char *s, const char *sub)$/;"	f	typeref:typename:char *
class	.dwm_backup.c	/^  const char *class;$/;"	m	struct:__anon4aab02610a08	typeref:typename:const char *	file:
class	dwm.c	/^  const char *class;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:
class	dwm_back.c	/^  const char *class;$/;"	m	struct:__anon0438348e0a08	typeref:typename:const char *	file:
clean	Makefile	/^clean:$/;"	t
clean	dmenu/Makefile	/^clean:$/;"	t
cleanup	.dwm_backup.c	/^cleanup(void)$/;"	f	typeref:typename:void
cleanup	dmenu/dmenu.c	/^cleanup(void)$/;"	f	typeref:typename:void	file:
cleanup	dmenu/dmenu_reserve.h	/^cleanup(void)$/;"	f	typeref:typename:void
cleanup	dwm.c	/^cleanup(void)$/;"	f	typeref:typename:void
cleanup	dwm_back.c	/^cleanup(void)$/;"	f	typeref:typename:void
cleanupmon	.dwm_backup.c	/^cleanupmon(Monitor *mon)$/;"	f	typeref:typename:void
cleanupmon	dwm.c	/^cleanupmon(Monitor *mon)$/;"	f	typeref:typename:void
cleanupmon	dwm_back.c	/^cleanupmon(Monitor *mon)$/;"	f	typeref:typename:void
click	.dwm_backup.c	/^  unsigned int click;$/;"	m	struct:__anon4aab02610708	typeref:typename:unsigned int	file:
click	dwm.c	/^  unsigned int click;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
click	dwm_back.c	/^  unsigned int click;$/;"	m	struct:__anon0438348e0708	typeref:typename:unsigned int	file:
clientmessage	.dwm_backup.c	/^clientmessage(XEvent *e)$/;"	f	typeref:typename:void
clientmessage	dwm.c	/^clientmessage(XEvent *e)$/;"	f	typeref:typename:void
clientmessage	dwm_back.c	/^clientmessage(XEvent *e)$/;"	f	typeref:typename:void
clients	.dwm_backup.c	/^  Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
clients	dwm.c	/^  Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
clients	dwm_back.c	/^  Client *clients;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
clip	dmenu/dmenu.c	/^static Atom clip, utf8;$/;"	v	typeref:typename:Atom	file:
clip	dmenu/dmenu_reserve.h	/^static Atom clip, utf8;$/;"	v	typeref:typename:Atom
col_border_norm	config_bak.h	/^static const char col_border_norm[] = "#00A19D";$/;"	v	typeref:typename:const char[]
col_border_sel	config_bak.h	/^static const char col_border_sel[]  = "#FFB344";$/;"	v	typeref:typename:const char[]
col_current	config.h	/^static const char col_current[]      = "#e36891";$/;"	v	typeref:typename:const char[]
col_cyan	config.def.h	/^static const char col_cyan[]        = "#005577";$/;"	v	typeref:typename:const char[]
col_cyan	config.h	/^static const char col_cyan[]        = "#005577";$/;"	v	typeref:typename:const char[]
col_cyan	config_bak.h	/^static const char col_cyan[]        = "#005577";$/;"	v	typeref:typename:const char[]
col_gray1	config.def.h	/^static const char col_gray1[]       = "#222222";$/;"	v	typeref:typename:const char[]
col_gray1	config.h	/^static const char col_gray1[]       = "#222222";$/;"	v	typeref:typename:const char[]
col_gray1	config_bak.h	/^static const char col_gray1[]       = "#222222";$/;"	v	typeref:typename:const char[]
col_gray2	config.def.h	/^static const char col_gray2[]       = "#444444";$/;"	v	typeref:typename:const char[]
col_gray2	config.h	/^static const char col_gray2[]       = "#4e5375";$/;"	v	typeref:typename:const char[]
col_gray2	config_bak.h	/^static const char col_gray2[]       = "#444444";$/;"	v	typeref:typename:const char[]
col_gray3	config.def.h	/^static const char col_gray3[]       = "#bbbbbb";$/;"	v	typeref:typename:const char[]
col_gray3	config.h	/^static const char col_gray3[]       = "#bbbbbb";$/;"	v	typeref:typename:const char[]
col_gray3	config_bak.h	/^static const char col_gray3[]       = "#bbbbbb";$/;"	v	typeref:typename:const char[]
col_gray4	config.def.h	/^static const char col_gray4[]       = "#eeeeee";$/;"	v	typeref:typename:const char[]
col_gray4	config.h	/^static const char col_gray4[]       = "#eeeeee";$/;"	v	typeref:typename:const char[]
col_gray4	config_bak.h	/^static const char col_gray4[]       = "#eeeeee";$/;"	v	typeref:typename:const char[]
col_green	config.h	/^static const char col_green[]       = "#00A19D";$/;"	v	typeref:typename:const char[]
col_primary	config.h	/^static const char col_primary[]     = "#da9cb4";$/;"	v	typeref:typename:const char[]
col_white	config.h	/^static const char col_white[]       = "#fbebc1";$/;"	v	typeref:typename:const char[]
colors	config.def.h	/^static const char *colors[][3]      = {$/;"	v	typeref:typename:const char * [][3]
colors	config.h	/^static const char *colors[][3]      = {$/;"	v	typeref:typename:const char * [][3]
colors	config_bak.h	/^static const char *colors[][3]      = {$/;"	v	typeref:typename:const char * [][3]
colors	dmenu/config.def.h	/^static const char *colors[SchemeLast][2] = {$/;"	v	typeref:typename:const char * [][2]
colors	dmenu/config.h	/^static const char *colors[SchemeLast][2] = {$/;"	v	typeref:typename:const char * [][2]
config.h	Makefile	/^config.h:$/;"	t
config.h	dmenu/Makefile	/^config.h:$/;"	t
configure	.dwm_backup.c	/^configure(Client *c)$/;"	f	typeref:typename:void
configure	dwm.c	/^configure(Client *c)$/;"	f	typeref:typename:void
configure	dwm_back.c	/^configure(Client *c)$/;"	f	typeref:typename:void
configurenotify	.dwm_backup.c	/^configurenotify(XEvent *e)$/;"	f	typeref:typename:void
configurenotify	dwm.c	/^configurenotify(XEvent *e)$/;"	f	typeref:typename:void
configurenotify	dwm_back.c	/^configurenotify(XEvent *e)$/;"	f	typeref:typename:void
configurerequest	.dwm_backup.c	/^configurerequest(XEvent *e)$/;"	f	typeref:typename:void
configurerequest	dwm.c	/^configurerequest(XEvent *e)$/;"	f	typeref:typename:void
configurerequest	dwm_back.c	/^configurerequest(XEvent *e)$/;"	f	typeref:typename:void
createmon	.dwm_backup.c	/^createmon(void)$/;"	f	typeref:typename:Monitor *
createmon	dwm.c	/^createmon(void)$/;"	f	typeref:typename:Monitor *
createmon	dwm_back.c	/^createmon(void)$/;"	f	typeref:typename:Monitor *
curr	dmenu/dmenu.c	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item *	file:
curr	dmenu/dmenu_reserve.h	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item *
cursor	.dwm_backup.c	/^static Cur *cursor[CurLast];$/;"	v	typeref:typename:Cur * []	file:
cursor	dmenu/dmenu.c	/^static size_t cursor;$/;"	v	typeref:typename:size_t	file:
cursor	dmenu/dmenu_reserve.h	/^static size_t cursor;$/;"	v	typeref:typename:size_t
cursor	dmenu/drw.h	/^	Cursor cursor;$/;"	m	struct:__anond8d4be500108	typeref:typename:Cursor
cursor	drw.h	/^	Cursor cursor;$/;"	m	struct:__anon0f5116480108	typeref:typename:Cursor
cursor	dwm.c	/^static Cur *cursor[CurLast];$/;"	v	typeref:typename:Cur * []	file:
cursor	dwm_back.c	/^static Cur *cursor[CurLast];$/;"	v	typeref:typename:Cur * []	file:
destroynotify	.dwm_backup.c	/^destroynotify(XEvent *e)$/;"	f	typeref:typename:void
destroynotify	dwm.c	/^destroynotify(XEvent *e)$/;"	f	typeref:typename:void
destroynotify	dwm_back.c	/^destroynotify(XEvent *e)$/;"	f	typeref:typename:void
detach	.dwm_backup.c	/^detach(Client *c)$/;"	f	typeref:typename:void
detach	dwm.c	/^detach(Client *c)$/;"	f	typeref:typename:void
detach	dwm_back.c	/^detach(Client *c)$/;"	f	typeref:typename:void
detachstack	.dwm_backup.c	/^detachstack(Client *c)$/;"	f	typeref:typename:void
detachstack	dwm.c	/^detachstack(Client *c)$/;"	f	typeref:typename:void
detachstack	dwm_back.c	/^detachstack(Client *c)$/;"	f	typeref:typename:void
die	dmenu/util.c	/^die(const char *fmt, ...) {$/;"	f	typeref:typename:void
die	util.c	/^die(const char *fmt, ...) {$/;"	f	typeref:typename:void
dirtomon	.dwm_backup.c	/^dirtomon(int dir)$/;"	f	typeref:typename:Monitor *
dirtomon	dwm.c	/^dirtomon(int dir)$/;"	f	typeref:typename:Monitor *
dirtomon	dwm_back.c	/^dirtomon(int dir)$/;"	f	typeref:typename:Monitor *
dist	Makefile	/^dist: clean$/;"	t
dist	dmenu/Makefile	/^dist: clean$/;"	t
dmenu	dmenu/Makefile	/^dmenu: dmenu.o drw.o util.o$/;"	t
dmenu-4.9-b/config.def.h	dmenu/dmenu-border-4.9.diff	/^--- dmenu-4.9-b\/config.def.h	2019-02-02 13:55:02.000000000 +0100$/;"	m
dmenu-4.9-b/dmenu.c	dmenu/dmenu-border-4.9.diff	/^--- dmenu-4.9-b\/dmenu.c	2019-02-02 13:55:02.000000000 +0100$/;"	m
dmenucmd	config.def.h	/^static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray/;"	v	typeref:typename:const char * []
dmenucmd	config.h	/^static const char *dmenucmd[]   = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gr/;"	v	typeref:typename:const char * []
dmenucmd	config_bak.h	/^static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray/;"	v	typeref:typename:const char * []
dmenufont	config.def.h	/^static const char dmenufont[]       = "monospace:size=10";$/;"	v	typeref:typename:const char[]
dmenufont	config.h	/^static const char dmenufont[]       = "Iosevka Medium Oblique:size=12";$/;"	v	typeref:typename:const char[]
dmenufont	config_bak.h	/^static const char dmenufont[]       = "Fifaks 1.0 dev1:size=14";$/;"	v	typeref:typename:const char[]
dmenumon	config.def.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dmenumon	config.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dmenumon	config_bak.h	/^static char dmenumon[2] = "0"; \/* component of dmenucmd, manipulated in spawn() *\/$/;"	v	typeref:typename:char[2]
dpy	.dwm_backup.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
dpy	dmenu/dmenu.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
dpy	dmenu/dmenu_reserve.h	/^static Display *dpy;$/;"	v	typeref:typename:Display *
dpy	dmenu/drw.h	/^	Display *dpy;$/;"	m	struct:Fnt	typeref:typename:Display *
dpy	dmenu/drw.h	/^	Display *dpy;$/;"	m	struct:__anond8d4be500308	typeref:typename:Display *
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:Fnt	typeref:typename:Display *
dpy	drw.h	/^	Display *dpy;$/;"	m	struct:__anon0f5116480308	typeref:typename:Display *
dpy	dwm.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
dpy	dwm_back.c	/^static Display *dpy;$/;"	v	typeref:typename:Display *	file:
drawable	dmenu/drw.h	/^	Drawable drawable;$/;"	m	struct:__anond8d4be500308	typeref:typename:Drawable
drawable	drw.h	/^	Drawable drawable;$/;"	m	struct:__anon0f5116480308	typeref:typename:Drawable
drawbar	.dwm_backup.c	/^drawbar(Monitor *m)$/;"	f	typeref:typename:void
drawbar	dwm.c	/^drawbar(Monitor *m)$/;"	f	typeref:typename:void
drawbar	dwm_back.c	/^drawbar(Monitor *m)$/;"	f	typeref:typename:void
drawbars	.dwm_backup.c	/^drawbars(void)$/;"	f	typeref:typename:void
drawbars	dwm.c	/^drawbars(void)$/;"	f	typeref:typename:void
drawbars	dwm_back.c	/^drawbars(void)$/;"	f	typeref:typename:void
drawhighlights	dmenu/dmenu.c	/^drawhighlights(struct item *item, int x, int y, int maxw)$/;"	f	typeref:typename:void	file:
drawhighlights	dmenu/dmenu_reserve.h	/^drawhighlights(struct item *item, int x, int y, int maxw)$/;"	f	typeref:typename:void
drawitem	dmenu/dmenu.c	/^drawitem(struct item *item, int x, int y, int w)$/;"	f	typeref:typename:int	file:
drawitem	dmenu/dmenu_reserve.h	/^drawitem(struct item *item, int x, int y, int w)$/;"	f	typeref:typename:int
drawmenu	dmenu/dmenu.c	/^drawmenu(void)$/;"	f	typeref:typename:void	file:
drawmenu	dmenu/dmenu_reserve.h	/^drawmenu(void)$/;"	f	typeref:typename:void
drw	.dwm_backup.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw	dmenu/dmenu.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw	dmenu/dmenu_reserve.h	/^static Drw *drw;$/;"	v	typeref:typename:Drw *
drw	dwm.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw	dwm_back.c	/^static Drw *drw;$/;"	v	typeref:typename:Drw *	file:
drw_clr_create	dmenu/drw.c	/^drw_clr_create(Drw *drw, Clr *dest, const char *clrname)$/;"	f	typeref:typename:void
drw_clr_create	drw.c	/^drw_clr_create(Drw *drw, Clr *dest, const char *clrname)$/;"	f	typeref:typename:void
drw_create	dmenu/drw.c	/^drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h)$/;"	f	typeref:typename:Drw *
drw_create	drw.c	/^drw_create(Display *dpy, int screen, Window root, unsigned int w, unsigned int h)$/;"	f	typeref:typename:Drw *
drw_cur_create	dmenu/drw.c	/^drw_cur_create(Drw *drw, int shape)$/;"	f	typeref:typename:Cur *
drw_cur_create	drw.c	/^drw_cur_create(Drw *drw, int shape)$/;"	f	typeref:typename:Cur *
drw_cur_free	dmenu/drw.c	/^drw_cur_free(Drw *drw, Cur *cursor)$/;"	f	typeref:typename:void
drw_cur_free	drw.c	/^drw_cur_free(Drw *drw, Cur *cursor)$/;"	f	typeref:typename:void
drw_font_getexts	dmenu/drw.c	/^drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h/;"	f	typeref:typename:void
drw_font_getexts	drw.c	/^drw_font_getexts(Fnt *font, const char *text, unsigned int len, unsigned int *w, unsigned int *h/;"	f	typeref:typename:void
drw_fontset_create	dmenu/drw.c	/^drw_fontset_create(Drw* drw, const char *fonts[], size_t fontcount)$/;"	f	typeref:typename:Fnt *
drw_fontset_create	drw.c	/^drw_fontset_create(Drw* drw, const char *fonts[], size_t fontcount)$/;"	f	typeref:typename:Fnt *
drw_fontset_free	dmenu/drw.c	/^drw_fontset_free(Fnt *font)$/;"	f	typeref:typename:void
drw_fontset_free	drw.c	/^drw_fontset_free(Fnt *font)$/;"	f	typeref:typename:void
drw_fontset_getwidth	dmenu/drw.c	/^drw_fontset_getwidth(Drw *drw, const char *text)$/;"	f	typeref:typename:unsigned int
drw_fontset_getwidth	drw.c	/^drw_fontset_getwidth(Drw *drw, const char *text)$/;"	f	typeref:typename:unsigned int
drw_free	dmenu/drw.c	/^drw_free(Drw *drw)$/;"	f	typeref:typename:void
drw_free	drw.c	/^drw_free(Drw *drw)$/;"	f	typeref:typename:void
drw_map	dmenu/drw.c	/^drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_map	drw.c	/^drw_map(Drw *drw, Window win, int x, int y, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_rect	dmenu/drw.c	/^drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert)$/;"	f	typeref:typename:void
drw_rect	drw.c	/^drw_rect(Drw *drw, int x, int y, unsigned int w, unsigned int h, int filled, int invert)$/;"	f	typeref:typename:void
drw_resize	dmenu/drw.c	/^drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_resize	drw.c	/^drw_resize(Drw *drw, unsigned int w, unsigned int h)$/;"	f	typeref:typename:void
drw_scm_create	dmenu/drw.c	/^drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount)$/;"	f	typeref:typename:Clr *
drw_scm_create	drw.c	/^drw_scm_create(Drw *drw, const char *clrnames[], size_t clrcount)$/;"	f	typeref:typename:Clr *
drw_setfontset	dmenu/drw.c	/^drw_setfontset(Drw *drw, Fnt *set)$/;"	f	typeref:typename:void
drw_setfontset	drw.c	/^drw_setfontset(Drw *drw, Fnt *set)$/;"	f	typeref:typename:void
drw_setscheme	dmenu/drw.c	/^drw_setscheme(Drw *drw, Clr *scm)$/;"	f	typeref:typename:void
drw_setscheme	drw.c	/^drw_setscheme(Drw *drw, Clr *scm)$/;"	f	typeref:typename:void
drw_text	dmenu/drw.c	/^drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char */;"	f	typeref:typename:int
drw_text	drw.c	/^drw_text(Drw *drw, int x, int y, unsigned int w, unsigned int h, unsigned int lpad, const char */;"	f	typeref:typename:int
dwm	Makefile	/^dwm: ${OBJ}$/;"	t
dwm-a/dwm.c	dwm-activetagindicatorbar-6.2.diff	/^--- dwm-a\/dwm.c	2019-02-02 06:55:28.000000000 -0600$/;"	m
ecalloc	dmenu/util.c	/^ecalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
ecalloc	util.c	/^ecalloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
embed	dmenu/dmenu.c	/^static char *embed;$/;"	v	typeref:typename:char *	file:
embed	dmenu/dmenu_reserve.h	/^static char *embed;$/;"	v	typeref:typename:char *
enternotify	.dwm_backup.c	/^enternotify(XEvent *e)$/;"	f	typeref:typename:void
enternotify	dwm.c	/^enternotify(XEvent *e)$/;"	f	typeref:typename:void
enternotify	dwm_back.c	/^enternotify(XEvent *e)$/;"	f	typeref:typename:void
expose	.dwm_backup.c	/^expose(XEvent *e)$/;"	f	typeref:typename:void
expose	dwm.c	/^expose(XEvent *e)$/;"	f	typeref:typename:void
expose	dwm_back.c	/^expose(XEvent *e)$/;"	f	typeref:typename:void
f	.dwm_backup.c	/^  float f;$/;"	m	union:__anon4aab0261060a	typeref:typename:float	file:
f	dwm.c	/^  float f;$/;"	m	union:__anon0f53a99e060a	typeref:typename:float	file:
f	dwm_back.c	/^  float f;$/;"	m	union:__anon0438348e060a	typeref:typename:float	file:
firefox	config.h	/^static const char *firefox[]    = { "firefox & notify-send -t 5000\\"Firefox is starting...\\"",/;"	v	typeref:typename:const char * []
flag	dmenu/stest.c	/^static int flag[26];$/;"	v	typeref:typename:int[26]	file:
focus	.dwm_backup.c	/^focus(Client *c)$/;"	f	typeref:typename:void
focus	dwm.c	/^focus(Client *c)$/;"	f	typeref:typename:void
focus	dwm_back.c	/^focus(Client *c)$/;"	f	typeref:typename:void
focusin	.dwm_backup.c	/^focusin(XEvent *e)$/;"	f	typeref:typename:void
focusin	dwm.c	/^focusin(XEvent *e)$/;"	f	typeref:typename:void
focusin	dwm_back.c	/^focusin(XEvent *e)$/;"	f	typeref:typename:void
focusmon	.dwm_backup.c	/^focusmon(const Arg *arg)$/;"	f	typeref:typename:void
focusmon	dwm.c	/^focusmon(const Arg *arg)$/;"	f	typeref:typename:void
focusmon	dwm_back.c	/^focusmon(const Arg *arg)$/;"	f	typeref:typename:void
focusstack	.dwm_backup.c	/^focusstack(const Arg *arg)$/;"	f	typeref:typename:void
focusstack	dwm.c	/^focusstack(const Arg *arg)$/;"	f	typeref:typename:void
focusstack	dwm_back.c	/^focusstack(const Arg *arg)$/;"	f	typeref:typename:void
fonts	config.def.h	/^static const char *fonts[]          = { "monospace:size=10" };$/;"	v	typeref:typename:const char * []
fonts	config.h	/^static const char *fonts[]          = { "Iosevka Medium:size=12", "monospace:size=12" };$/;"	v	typeref:typename:const char * []
fonts	config_bak.h	/^static const char *fonts[]          = { "iosevka:size=14", "monospace:size=14" };$/;"	v	typeref:typename:const char * []
fonts	dmenu/config.def.h	/^static const char *fonts[] = {$/;"	v	typeref:typename:const char * []
fonts	dmenu/config.h	/^static const char *fonts[] = {$/;"	v	typeref:typename:const char * []
fonts	dmenu/drw.h	/^	Fnt *fonts;$/;"	m	struct:__anond8d4be500308	typeref:typename:Fnt *
fonts	drw.h	/^	Fnt *fonts;$/;"	m	struct:__anon0f5116480308	typeref:typename:Fnt *
fstrncmp	dmenu/dmenu.c	/^static int (*fstrncmp)(const char *, const char *, size_t) = strncasecmp;$/;"	v	typeref:typename:int (*)(const char *,const char *,size_t)	file:
fstrncmp	dmenu/dmenu_reserve.h	/^static int (*fstrncmp)(const char *, const char *, size_t) = strncasecmp;$/;"	v	typeref:typename:int (*)(const char *,const char *,size_t)
fstrstr	dmenu/dmenu.c	/^static char *(*fstrstr)(const char *, const char *) = cistrstr;$/;"	v	typeref:typename:char * (*)(const char *,const char *)	file:
fstrstr	dmenu/dmenu_reserve.h	/^static char *(*fstrstr)(const char *, const char *) = cistrstr;$/;"	v	typeref:typename:char * (*)(const char *,const char *)
func	.dwm_backup.c	/^  void (*func)(const Arg *);$/;"	m	struct:__anon4aab02610808	typeref:typename:void (*)(const Arg *)	file:
func	.dwm_backup.c	/^  void (*func)(const Arg *arg);$/;"	m	struct:__anon4aab02610708	typeref:typename:void (*)(const Arg * arg)	file:
func	dwm.c	/^  void (*func)(const Arg *);$/;"	m	struct:__anon0f53a99e0808	typeref:typename:void (*)(const Arg *)	file:
func	dwm.c	/^  void (*func)(const Arg *arg);$/;"	m	struct:__anon0f53a99e0708	typeref:typename:void (*)(const Arg * arg)	file:
func	dwm_back.c	/^  void (*func)(const Arg *);$/;"	m	struct:__anon0438348e0808	typeref:typename:void (*)(const Arg *)	file:
func	dwm_back.c	/^  void (*func)(const Arg *arg);$/;"	m	struct:__anon0438348e0708	typeref:typename:void (*)(const Arg * arg)	file:
gappx	.dwm_backup.c	/^  int gappx;            \/* gaps between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappx	config.def.h	/^static const unsigned int gappx     = 5;        \/* gaps between windows *\/$/;"	v	typeref:typename:const unsigned int
gappx	config.h	/^static const unsigned int gappx     = 9;        \/* gaps between windows *\/$/;"	v	typeref:typename:const unsigned int
gappx	config_bak.h	/^static const unsigned int gappx     = 10;        \/* gaps between windows *\/$/;"	v	typeref:typename:const unsigned int
gappx	dwm.c	/^  int gappx;            \/* gaps between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gappx	dwm_back.c	/^  int gappx;            \/* gaps between windows *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
gc	dmenu/drw.h	/^	GC gc;$/;"	m	struct:__anond8d4be500308	typeref:typename:GC
gc	drw.h	/^	GC gc;$/;"	m	struct:__anon0f5116480308	typeref:typename:GC
getatomprop	.dwm_backup.c	/^getatomprop(Client *c, Atom prop)$/;"	f	typeref:typename:Atom
getatomprop	dwm.c	/^getatomprop(Client *c, Atom prop)$/;"	f	typeref:typename:Atom
getatomprop	dwm_back.c	/^getatomprop(Client *c, Atom prop)$/;"	f	typeref:typename:Atom
getrootptr	.dwm_backup.c	/^getrootptr(int *x, int *y)$/;"	f	typeref:typename:int
getrootptr	dwm.c	/^getrootptr(int *x, int *y)$/;"	f	typeref:typename:int
getrootptr	dwm_back.c	/^getrootptr(int *x, int *y)$/;"	f	typeref:typename:int
getstate	.dwm_backup.c	/^getstate(Window w)$/;"	f	typeref:typename:long
getstate	dwm.c	/^getstate(Window w)$/;"	f	typeref:typename:long
getstate	dwm_back.c	/^getstate(Window w)$/;"	f	typeref:typename:long
gettextprop	.dwm_backup.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:int
gettextprop	dwm.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:int
gettextprop	dwm_back.c	/^gettextprop(Window w, Atom atom, char *text, unsigned int size)$/;"	f	typeref:typename:int
grabbuttons	.dwm_backup.c	/^grabbuttons(Client *c, int focused)$/;"	f	typeref:typename:void
grabbuttons	dwm.c	/^grabbuttons(Client *c, int focused)$/;"	f	typeref:typename:void
grabbuttons	dwm_back.c	/^grabbuttons(Client *c, int focused)$/;"	f	typeref:typename:void
grabfocus	dmenu/dmenu.c	/^grabfocus(void)$/;"	f	typeref:typename:void	file:
grabfocus	dmenu/dmenu_reserve.h	/^grabfocus(void)$/;"	f	typeref:typename:void
grabkeyboard	dmenu/dmenu.c	/^grabkeyboard(void)$/;"	f	typeref:typename:void	file:
grabkeyboard	dmenu/dmenu_reserve.h	/^grabkeyboard(void)$/;"	f	typeref:typename:void
grabkeys	.dwm_backup.c	/^grabkeys(void)$/;"	f	typeref:typename:void
grabkeys	dwm.c	/^grabkeys(void)$/;"	f	typeref:typename:void
grabkeys	dwm_back.c	/^grabkeys(void)$/;"	f	typeref:typename:void
h	.dwm_backup.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
h	dmenu/drw.h	/^	unsigned int h;$/;"	m	struct:Fnt	typeref:typename:unsigned int
h	dmenu/drw.h	/^	unsigned int w, h;$/;"	m	struct:__anond8d4be500308	typeref:typename:unsigned int
h	drw.h	/^	unsigned int h;$/;"	m	struct:Fnt	typeref:typename:unsigned int
h	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
h	dwm.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
h	dwm_back.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
handler	.dwm_backup.c	/^static void (*handler[LASTEvent]) (XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
handler	dwm.c	/^static void (*handler[LASTEvent]) (XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
handler	dwm_back.c	/^static void (*handler[LASTEvent]) (XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
i	.dwm_backup.c	/^  int i;$/;"	m	union:__anon4aab0261060a	typeref:typename:int	file:
i	dwm.c	/^  int i;$/;"	m	union:__anon0f53a99e060a	typeref:typename:int	file:
i	dwm_back.c	/^  int i;$/;"	m	union:__anon0438348e060a	typeref:typename:int	file:
inch	.dwm_backup.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
inch	dwm.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
inch	dwm_back.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
incnmaster	.dwm_backup.c	/^incnmaster(const Arg *arg)$/;"	f	typeref:typename:void
incnmaster	dwm.c	/^incnmaster(const Arg *arg)$/;"	f	typeref:typename:void
incnmaster	dwm_back.c	/^incnmaster(const Arg *arg)$/;"	f	typeref:typename:void
incw	.dwm_backup.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
incw	dwm.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
incw	dwm_back.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
inputw	dmenu/dmenu.c	/^static int inputw = 0, promptw;$/;"	v	typeref:typename:int	file:
inputw	dmenu/dmenu_reserve.h	/^static int inputw = 0, promptw;$/;"	v	typeref:typename:int
insert	dmenu/dmenu.c	/^insert(const char *str, ssize_t n)$/;"	f	typeref:typename:void	file:
insert	dmenu/dmenu_reserve.h	/^insert(const char *str, ssize_t n)$/;"	f	typeref:typename:void
install	Makefile	/^install: all$/;"	t
install	dmenu/Makefile	/^install: all$/;"	t
instance	.dwm_backup.c	/^  const char *instance;$/;"	m	struct:__anon4aab02610a08	typeref:typename:const char *	file:
instance	dwm.c	/^  const char *instance;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:
instance	dwm_back.c	/^  const char *instance;$/;"	m	struct:__anon0438348e0a08	typeref:typename:const char *	file:
isfixed	.dwm_backup.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfixed	dwm.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfixed	dwm_back.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	.dwm_backup.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	.dwm_backup.c	/^  int isfloating;$/;"	m	struct:__anon4aab02610a08	typeref:typename:int	file:
isfloating	dwm.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	dwm.c	/^  int isfloating;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
isfloating	dwm_back.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfloating	dwm_back.c	/^  int isfloating;$/;"	m	struct:__anon0438348e0a08	typeref:typename:int	file:
isfullscreen	.dwm_backup.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfullscreen	dwm.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isfullscreen	dwm_back.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isuniquegeom	.dwm_backup.c	/^isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info)$/;"	f	typeref:typename:int	file:
isuniquegeom	dwm.c	/^isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info)$/;"	f	typeref:typename:int	file:
isuniquegeom	dwm_back.c	/^isuniquegeom(XineramaScreenInfo *unique, size_t n, XineramaScreenInfo *info)$/;"	f	typeref:typename:int	file:
isurgent	.dwm_backup.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isurgent	dwm.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
isurgent	dwm_back.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
item	dmenu/dmenu.c	/^struct item {$/;"	s	file:
item	dmenu/dmenu_reserve.h	/^struct item {$/;"	s
items	dmenu/dmenu.c	/^static struct item *items = NULL;$/;"	v	typeref:struct:item *	file:
items	dmenu/dmenu_reserve.h	/^static struct item *items = NULL;$/;"	v	typeref:struct:item *
keypress	.dwm_backup.c	/^keypress(XEvent *e)$/;"	f	typeref:typename:void
keypress	dmenu/dmenu.c	/^keypress(XKeyEvent *ev)$/;"	f	typeref:typename:void	file:
keypress	dmenu/dmenu_reserve.h	/^keypress(XKeyEvent *ev)$/;"	f	typeref:typename:void
keypress	dwm.c	/^keypress(XEvent *e)$/;"	f	typeref:typename:void
keypress	dwm_back.c	/^keypress(XEvent *e)$/;"	f	typeref:typename:void
keys	config.def.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keys	config.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keys	config_bak.h	/^static Key keys[] = {$/;"	v	typeref:typename:Key[]
keysym	.dwm_backup.c	/^  KeySym keysym;$/;"	m	struct:__anon4aab02610808	typeref:typename:KeySym	file:
keysym	dwm.c	/^  KeySym keysym;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:KeySym	file:
keysym	dwm_back.c	/^  KeySym keysym;$/;"	m	struct:__anon0438348e0808	typeref:typename:KeySym	file:
killclient	.dwm_backup.c	/^killclient(const Arg *arg)$/;"	f	typeref:typename:void
killclient	dwm.c	/^killclient(const Arg *arg)$/;"	f	typeref:typename:void
killclient	dwm_back.c	/^killclient(const Arg *arg)$/;"	f	typeref:typename:void
kittyTerm	config.h	/^static const char *kittyTerm[]  = { "kitty", NULL };$/;"	v	typeref:typename:const char * []
layouts	config.def.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
layouts	config.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
layouts	config_bak.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
left	dmenu/dmenu.c	/^	struct item *left, *right;$/;"	m	struct:item	typeref:struct:item *	file:
left	dmenu/dmenu_reserve.h	/^	struct item *left, *right;$/;"	m	struct:item	typeref:struct:item *
limitexceeded	.dwm_backup.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	typeref:typename:char[]	file:
limitexceeded	dwm.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	typeref:typename:char[]	file:
limitexceeded	dwm_back.c	/^struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };$/;"	m	struct:NumTags	typeref:typename:char[]	file:
lineheight	config.h	/^static unsigned int lineheight = 15;            \/* -h option; minimum height of a menu line    /;"	v	typeref:typename:unsigned int
lineheight	config_bak.h	/^static unsigned int lineheight = 15;            \/* -h option; minimum height of a menu line    /;"	v	typeref:typename:unsigned int
lineheight	dmenu/config.def.h	/^static unsigned int lineheight = 0;         \/* -h option; minimum height of a menu line     *\/$/;"	v	typeref:typename:unsigned int
lineheight	dmenu/dmenu.c	/^static int lineheight = 20;$/;"	v	typeref:typename:int	file:
lineheight	dmenu/dmenu_reserve.h	/^static int lineheight = 20;$/;"	v	typeref:typename:int
lines	dmenu/config.def.h	/^static unsigned int lines      = 0;$/;"	v	typeref:typename:unsigned int
lines	dmenu/config.h	/^static unsigned int lines      = 0;$/;"	v	typeref:typename:unsigned int
lockfullscreen	config.def.h	/^static const int lockfullscreen = 1; \/* 1 will force focus on the fullscreen window *\/$/;"	v	typeref:typename:const int
lockfullscreen	config.h	/^static const int lockfullscreen = 1; \/* 1 will force focus on the fullscreen window *\/$/;"	v	typeref:typename:const int
lockfullscreen	config_bak.h	/^static const int lockfullscreen = 1; \/* 1 will force focus on the fullscreen window *\/$/;"	v	typeref:typename:const int
lrpad	.dwm_backup.c	/^static int lrpad;            \/* sum of left and right padding for text *\/$/;"	v	typeref:typename:int	file:
lrpad	dmenu/dmenu.c	/^static int lrpad; \/* sum of left and right padding *\/$/;"	v	typeref:typename:int	file:
lrpad	dmenu/dmenu_reserve.h	/^static int lrpad; \/* sum of left and right padding *\/$/;"	v	typeref:typename:int
lrpad	dwm.c	/^static int lrpad;            \/* sum of left and right padding for text *\/$/;"	v	typeref:typename:int	file:
lrpad	dwm_back.c	/^static int lrpad;            \/* sum of left and right padding for text *\/$/;"	v	typeref:typename:int	file:
lt	.dwm_backup.c	/^  const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:
lt	dwm.c	/^  const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:
lt	dwm_back.c	/^  const Layout *lt[2];$/;"	m	struct:Monitor	typeref:typename:const Layout * [2]	file:
ltsymbol	.dwm_backup.c	/^  char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:
ltsymbol	dwm.c	/^  char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:
ltsymbol	dwm_back.c	/^  char ltsymbol[16];$/;"	m	struct:Monitor	typeref:typename:char[16]	file:
main	.dwm_backup.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	dmenu/dmenu.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	dmenu/dmenu_reserve.h	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	dmenu/stest.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	dwm.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	dwm_back.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	transient.c	/^int main(void) {$/;"	f	typeref:typename:int
manage	.dwm_backup.c	/^manage(Window w, XWindowAttributes *wa)$/;"	f	typeref:typename:void
manage	dwm.c	/^manage(Window w, XWindowAttributes *wa)$/;"	f	typeref:typename:void
manage	dwm_back.c	/^manage(Window w, XWindowAttributes *wa)$/;"	f	typeref:typename:void
mappingnotify	.dwm_backup.c	/^mappingnotify(XEvent *e)$/;"	f	typeref:typename:void
mappingnotify	dwm.c	/^mappingnotify(XEvent *e)$/;"	f	typeref:typename:void
mappingnotify	dwm_back.c	/^mappingnotify(XEvent *e)$/;"	f	typeref:typename:void
maprequest	.dwm_backup.c	/^maprequest(XEvent *e)$/;"	f	typeref:typename:void
maprequest	dwm.c	/^maprequest(XEvent *e)$/;"	f	typeref:typename:void
maprequest	dwm_back.c	/^maprequest(XEvent *e)$/;"	f	typeref:typename:void
mask	.dwm_backup.c	/^  unsigned int mask;$/;"	m	struct:__anon4aab02610708	typeref:typename:unsigned int	file:
mask	dwm.c	/^  unsigned int mask;$/;"	m	struct:__anon0f53a99e0708	typeref:typename:unsigned int	file:
mask	dwm_back.c	/^  unsigned int mask;$/;"	m	struct:__anon0438348e0708	typeref:typename:unsigned int	file:
match	dmenu/dmenu.c	/^match(void)$/;"	f	typeref:typename:void	file:
match	dmenu/dmenu_reserve.h	/^match(void)$/;"	f	typeref:typename:void
match	dmenu/stest.c	/^static int match = 0;$/;"	v	typeref:typename:int	file:
matchend	dmenu/dmenu.c	/^static struct item *matches, *matchend;$/;"	v	typeref:struct:item *	file:
matchend	dmenu/dmenu_reserve.h	/^static struct item *matches, *matchend;$/;"	v	typeref:struct:item *
matches	dmenu/dmenu.c	/^static struct item *matches, *matchend;$/;"	v	typeref:struct:item *	file:
matches	dmenu/dmenu_reserve.h	/^static struct item *matches, *matchend;$/;"	v	typeref:struct:item *
max_textw	dmenu/dmenu_reserve.h	/^max_textw(void)$/;"	f	typeref:typename:int
maxa	.dwm_backup.c	/^  float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
maxa	dwm.c	/^  float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
maxa	dwm_back.c	/^  float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
maxh	.dwm_backup.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
maxh	dwm.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
maxh	dwm_back.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
maxw	.dwm_backup.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
maxw	dwm.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
maxw	dwm_back.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
mfact	.dwm_backup.c	/^  float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:
mfact	config.def.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	config.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	config_bak.h	/^static const float mfact     = 0.55; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
mfact	dwm.c	/^  float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:
mfact	dwm_back.c	/^  float mfact;$/;"	m	struct:Monitor	typeref:typename:float	file:
mh	.dwm_backup.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mh	dmenu/dmenu.c	/^static int bh, mw, mh;$/;"	v	typeref:typename:int	file:
mh	dmenu/dmenu_reserve.h	/^static int bh, mw, mh;$/;"	v	typeref:typename:int
mh	dwm.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mh	dwm_back.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mina	.dwm_backup.c	/^  float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
mina	dwm.c	/^  float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
mina	dwm_back.c	/^  float mina, maxa;$/;"	m	struct:Client	typeref:typename:float	file:
minh	.dwm_backup.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
minh	dwm.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
minh	dwm_back.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
minw	.dwm_backup.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
minw	dwm.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
minw	dwm_back.c	/^  int basew, baseh, incw, inch, maxw, maxh, minw, minh;$/;"	m	struct:Client	typeref:typename:int	file:
mod	.dwm_backup.c	/^  unsigned int mod;$/;"	m	struct:__anon4aab02610808	typeref:typename:unsigned int	file:
mod	dwm.c	/^  unsigned int mod;$/;"	m	struct:__anon0f53a99e0808	typeref:typename:unsigned int	file:
mod	dwm_back.c	/^  unsigned int mod;$/;"	m	struct:__anon0438348e0808	typeref:typename:unsigned int	file:
mon	.dwm_backup.c	/^  Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:
mon	dmenu/dmenu.c	/^static int mon = -1, screen;$/;"	v	typeref:typename:int	file:
mon	dmenu/dmenu_reserve.h	/^static int mon = -1, screen;$/;"	v	typeref:typename:int
mon	dwm.c	/^  Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:
mon	dwm_back.c	/^  Monitor *mon;$/;"	m	struct:Client	typeref:typename:Monitor *	file:
monitor	.dwm_backup.c	/^  int monitor;$/;"	m	struct:__anon4aab02610a08	typeref:typename:int	file:
monitor	dwm.c	/^  int monitor;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:int	file:
monitor	dwm_back.c	/^  int monitor;$/;"	m	struct:__anon0438348e0a08	typeref:typename:int	file:
monocle	.dwm_backup.c	/^monocle(Monitor *m)$/;"	f	typeref:typename:void
monocle	dwm.c	/^monocle(Monitor *m)$/;"	f	typeref:typename:void
monocle	dwm_back.c	/^monocle(Monitor *m)$/;"	f	typeref:typename:void
mons	.dwm_backup.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
mons	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
mons	dwm_back.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
motionnotify	.dwm_backup.c	/^motionnotify(XEvent *e)$/;"	f	typeref:typename:void
motionnotify	dwm.c	/^motionnotify(XEvent *e)$/;"	f	typeref:typename:void
motionnotify	dwm_back.c	/^motionnotify(XEvent *e)$/;"	f	typeref:typename:void
movemouse	.dwm_backup.c	/^movemouse(const Arg *arg)$/;"	f	typeref:typename:void
movemouse	dwm.c	/^movemouse(const Arg *arg)$/;"	f	typeref:typename:void
movemouse	dwm_back.c	/^movemouse(const Arg *arg)$/;"	f	typeref:typename:void
movewordedge	dmenu/dmenu.c	/^movewordedge(int dir)$/;"	f	typeref:typename:void	file:
movewordedge	dmenu/dmenu_reserve.h	/^movewordedge(int dir)$/;"	f	typeref:typename:void
mw	.dwm_backup.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mw	dmenu/dmenu.c	/^static int bh, mw, mh;$/;"	v	typeref:typename:int	file:
mw	dmenu/dmenu_reserve.h	/^static int bh, mw, mh;$/;"	v	typeref:typename:int
mw	dwm.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mw	dwm_back.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mx	.dwm_backup.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mx	dwm.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
mx	dwm_back.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
my	.dwm_backup.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
my	dwm.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
my	dwm_back.c	/^  int mx, my, mw, mh;   \/* screen size *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
name	.dwm_backup.c	/^  char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:
name	dwm.c	/^  char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:
name	dwm_back.c	/^  char name[256];$/;"	m	struct:Client	typeref:typename:char[256]	file:
netatom	.dwm_backup.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
netatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
netatom	dwm_back.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
neverfocus	.dwm_backup.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
neverfocus	dwm.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
neverfocus	dwm_back.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
new	dmenu/stest.c	/^static struct stat old, new;$/;"	v	typeref:struct:stat	file:
next	.dwm_backup.c	/^  Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:
next	.dwm_backup.c	/^  Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:
next	dmenu/dmenu.c	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item *	file:
next	dmenu/dmenu_reserve.h	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item *
next	dmenu/drw.h	/^	struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt *
next	drw.h	/^	struct Fnt *next;$/;"	m	struct:Fnt	typeref:struct:Fnt *
next	dwm.c	/^  Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:
next	dwm.c	/^  Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:
next	dwm_back.c	/^  Client *next;$/;"	m	struct:Client	typeref:typename:Client *	file:
next	dwm_back.c	/^  Monitor *next;$/;"	m	struct:Monitor	typeref:typename:Monitor *	file:
nextrune	dmenu/dmenu.c	/^nextrune(int inc)$/;"	f	typeref:typename:size_t	file:
nextrune	dmenu/dmenu_reserve.h	/^nextrune(int inc)$/;"	f	typeref:typename:size_t
nexttiled	.dwm_backup.c	/^nexttiled(Client *c)$/;"	f	typeref:typename:Client *
nexttiled	dwm.c	/^nexttiled(Client *c)$/;"	f	typeref:typename:Client *
nexttiled	dwm_back.c	/^nexttiled(Client *c)$/;"	f	typeref:typename:Client *
nmaster	.dwm_backup.c	/^  int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:
nmaster	config.def.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	config.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	config_bak.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
nmaster	dwm.c	/^  int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:
nmaster	dwm_back.c	/^  int nmaster;$/;"	m	struct:Monitor	typeref:typename:int	file:
num	.dwm_backup.c	/^  int num;$/;"	m	struct:Monitor	typeref:typename:int	file:
num	dwm.c	/^  int num;$/;"	m	struct:Monitor	typeref:typename:int	file:
num	dwm_back.c	/^  int num;$/;"	m	struct:Monitor	typeref:typename:int	file:
numlockmask	.dwm_backup.c	/^static unsigned int numlockmask = 0;$/;"	v	typeref:typename:unsigned int	file:
numlockmask	dwm.c	/^static unsigned int numlockmask = 0;$/;"	v	typeref:typename:unsigned int	file:
numlockmask	dwm_back.c	/^static unsigned int numlockmask = 0;$/;"	v	typeref:typename:unsigned int	file:
old	dmenu/stest.c	/^static struct stat old, new;$/;"	v	typeref:struct:stat	file:
oldbw	.dwm_backup.c	/^  int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
oldbw	dwm.c	/^  int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
oldbw	dwm_back.c	/^  int bw, oldbw;$/;"	m	struct:Client	typeref:typename:int	file:
oldh	.dwm_backup.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldh	dwm.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldh	dwm_back.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldstate	.dwm_backup.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
oldstate	dwm.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
oldstate	dwm_back.c	/^  int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen;$/;"	m	struct:Client	typeref:typename:int	file:
oldw	.dwm_backup.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldw	dwm.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldw	dwm_back.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldx	.dwm_backup.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldx	dwm.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldx	dwm_back.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldy	.dwm_backup.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldy	dwm.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
oldy	dwm_back.c	/^  int oldx, oldy, oldw, oldh;$/;"	m	struct:Client	typeref:typename:int	file:
options	Makefile	/^options:$/;"	t
options	dmenu/Makefile	/^options:$/;"	t
out	dmenu/dmenu.c	/^	int out;$/;"	m	struct:item	typeref:typename:int	file:
out	dmenu/dmenu_reserve.h	/^	int out;$/;"	m	struct:item	typeref:typename:int
parentwin	dmenu/dmenu.c	/^static Window root, parentwin, win;$/;"	v	typeref:typename:Window	file:
parentwin	dmenu/dmenu_reserve.h	/^static Window root, parentwin, win;$/;"	v	typeref:typename:Window
paste	dmenu/dmenu.c	/^paste(void)$/;"	f	typeref:typename:void	file:
paste	dmenu/dmenu_reserve.h	/^paste(void)$/;"	f	typeref:typename:void
pattern	dmenu/drw.h	/^	FcPattern *pattern;$/;"	m	struct:Fnt	typeref:typename:FcPattern *
pattern	drw.h	/^	FcPattern *pattern;$/;"	m	struct:Fnt	typeref:typename:FcPattern *
pop	.dwm_backup.c	/^pop(Client *c)$/;"	f	typeref:typename:void
pop	dwm.c	/^pop(Client *c)$/;"	f	typeref:typename:void
pop	dwm_back.c	/^pop(Client *c)$/;"	f	typeref:typename:void
prev	dmenu/dmenu.c	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item *	file:
prev	dmenu/dmenu_reserve.h	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item *
prompt	dmenu/config.def.h	/^static const char *prompt      = NULL;      \/* -p  option; prompt to the left of input field *\/$/;"	v	typeref:typename:const char *
prompt	dmenu/config.h	/^static const char *prompt      = NULL;      \/* -p  option; prompt to the left of input field *\/$/;"	v	typeref:typename:const char *
promptw	dmenu/dmenu.c	/^static int inputw = 0, promptw;$/;"	v	typeref:typename:int	file:
promptw	dmenu/dmenu_reserve.h	/^static int inputw = 0, promptw;$/;"	v	typeref:typename:int
propertynotify	.dwm_backup.c	/^propertynotify(XEvent *e)$/;"	f	typeref:typename:void
propertynotify	dwm.c	/^propertynotify(XEvent *e)$/;"	f	typeref:typename:void
propertynotify	dwm_back.c	/^propertynotify(XEvent *e)$/;"	f	typeref:typename:void
quit	.dwm_backup.c	/^quit(const Arg *arg)$/;"	f	typeref:typename:void
quit	dwm.c	/^quit(const Arg *arg)$/;"	f	typeref:typename:void
quit	dwm_back.c	/^quit(const Arg *arg)$/;"	f	typeref:typename:void
readstdin	dmenu/dmenu.c	/^readstdin(void)$/;"	f	typeref:typename:void	file:
readstdin	dmenu/dmenu_reserve.h	/^readstdin(void)$/;"	f	typeref:typename:void
recttomon	.dwm_backup.c	/^recttomon(int x, int y, int w, int h)$/;"	f	typeref:typename:Monitor *
recttomon	dwm.c	/^recttomon(int x, int y, int w, int h)$/;"	f	typeref:typename:Monitor *
recttomon	dwm_back.c	/^recttomon(int x, int y, int w, int h)$/;"	f	typeref:typename:Monitor *
resize	.dwm_backup.c	/^resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f	typeref:typename:void
resize	dwm.c	/^resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f	typeref:typename:void
resize	dwm_back.c	/^resize(Client *c, int x, int y, int w, int h, int interact)$/;"	f	typeref:typename:void
resizeclient	.dwm_backup.c	/^resizeclient(Client *c, int x, int y, int w, int h)$/;"	f	typeref:typename:void
resizeclient	dwm.c	/^resizeclient(Client *c, int x, int y, int w, int h)$/;"	f	typeref:typename:void
resizeclient	dwm_back.c	/^resizeclient(Client *c, int x, int y, int w, int h)$/;"	f	typeref:typename:void
resizehints	config.def.h	/^static const int resizehints = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizehints	config.h	/^static const int resizehints = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizehints	config_bak.h	/^static const int resizehints = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resizemouse	.dwm_backup.c	/^resizemouse(const Arg *arg)$/;"	f	typeref:typename:void
resizemouse	dwm.c	/^resizemouse(const Arg *arg)$/;"	f	typeref:typename:void
resizemouse	dwm_back.c	/^resizemouse(const Arg *arg)$/;"	f	typeref:typename:void
restack	.dwm_backup.c	/^restack(Monitor *m)$/;"	f	typeref:typename:void
restack	dwm.c	/^restack(Monitor *m)$/;"	f	typeref:typename:void
restack	dwm_back.c	/^restack(Monitor *m)$/;"	f	typeref:typename:void
right	dmenu/dmenu.c	/^	struct item *left, *right;$/;"	m	struct:item	typeref:struct:item *	file:
right	dmenu/dmenu_reserve.h	/^	struct item *left, *right;$/;"	m	struct:item	typeref:struct:item *
root	.dwm_backup.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
root	dmenu/dmenu.c	/^static Window root, parentwin, win;$/;"	v	typeref:typename:Window	file:
root	dmenu/dmenu_reserve.h	/^static Window root, parentwin, win;$/;"	v	typeref:typename:Window
root	dmenu/drw.h	/^	Window root;$/;"	m	struct:__anond8d4be500308	typeref:typename:Window
root	drw.h	/^	Window root;$/;"	m	struct:__anon0f5116480308	typeref:typename:Window
root	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
root	dwm_back.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
rules	config.def.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
rules	config.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
rules	config_bak.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
run	.dwm_backup.c	/^run(void)$/;"	f	typeref:typename:void
run	dmenu/dmenu.c	/^run(void)$/;"	f	typeref:typename:void	file:
run	dmenu/dmenu_reserve.h	/^run(void)$/;"	f	typeref:typename:void
run	dwm.c	/^run(void)$/;"	f	typeref:typename:void
run	dwm_back.c	/^run(void)$/;"	f	typeref:typename:void
runAutostart	.dwm_backup.c	/^runAutostart(void) {$/;"	f	typeref:typename:void
runAutostart	dwm.c	/^runAutostart(void) {$/;"	f	typeref:typename:void
runAutostart	dwm_back.c	/^runAutostart(void) {$/;"	f	typeref:typename:void
running	.dwm_backup.c	/^static int running = 1;$/;"	v	typeref:typename:int	file:
running	dwm.c	/^static int running = 1;$/;"	v	typeref:typename:int	file:
running	dwm_back.c	/^static int running = 1;$/;"	v	typeref:typename:int	file:
scan	.dwm_backup.c	/^scan(void)$/;"	f	typeref:typename:void
scan	dwm.c	/^scan(void)$/;"	f	typeref:typename:void
scan	dwm_back.c	/^scan(void)$/;"	f	typeref:typename:void
scheme	.dwm_backup.c	/^static Clr **scheme;$/;"	v	typeref:typename:Clr **	file:
scheme	dmenu/dmenu.c	/^static Clr *scheme[SchemeLast];$/;"	v	typeref:typename:Clr * []	file:
scheme	dmenu/dmenu_reserve.h	/^static Clr *scheme[SchemeLast];$/;"	v	typeref:typename:Clr * []
scheme	dmenu/drw.h	/^	Clr *scheme;$/;"	m	struct:__anond8d4be500308	typeref:typename:Clr *
scheme	drw.h	/^	Clr *scheme;$/;"	m	struct:__anon0f5116480308	typeref:typename:Clr *
scheme	dwm.c	/^static Clr **scheme;$/;"	v	typeref:typename:Clr **	file:
scheme	dwm_back.c	/^static Clr **scheme;$/;"	v	typeref:typename:Clr **	file:
screen	.dwm_backup.c	/^static int screen;$/;"	v	typeref:typename:int	file:
screen	dmenu/dmenu.c	/^static int mon = -1, screen;$/;"	v	typeref:typename:int	file:
screen	dmenu/dmenu_reserve.h	/^static int mon = -1, screen;$/;"	v	typeref:typename:int
screen	dmenu/drw.h	/^	int screen;$/;"	m	struct:__anond8d4be500308	typeref:typename:int
screen	drw.h	/^	int screen;$/;"	m	struct:__anon0f5116480308	typeref:typename:int
screen	dwm.c	/^static int screen;$/;"	v	typeref:typename:int	file:
screen	dwm_back.c	/^static int screen;$/;"	v	typeref:typename:int	file:
sel	.dwm_backup.c	/^  Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
sel	dmenu/dmenu.c	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item *	file:
sel	dmenu/dmenu_reserve.h	/^static struct item *prev, *curr, *next, *sel;$/;"	v	typeref:struct:item *
sel	dwm.c	/^  Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
sel	dwm_back.c	/^  Client *sel;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
sellt	.dwm_backup.c	/^  unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
sellt	dwm.c	/^  unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
sellt	dwm_back.c	/^  unsigned int sellt;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
selmon	.dwm_backup.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
selmon	dwm.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
selmon	dwm_back.c	/^static Monitor *mons, *selmon;$/;"	v	typeref:typename:Monitor *	file:
seltags	.dwm_backup.c	/^  unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
seltags	dwm.c	/^  unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
seltags	dwm_back.c	/^  unsigned int seltags;$/;"	m	struct:Monitor	typeref:typename:unsigned int	file:
sendevent	.dwm_backup.c	/^sendevent(Client *c, Atom proto)$/;"	f	typeref:typename:int
sendevent	dwm.c	/^sendevent(Client *c, Atom proto)$/;"	f	typeref:typename:int
sendevent	dwm_back.c	/^sendevent(Client *c, Atom proto)$/;"	f	typeref:typename:int
sendmon	.dwm_backup.c	/^sendmon(Client *c, Monitor *m)$/;"	f	typeref:typename:void
sendmon	dwm.c	/^sendmon(Client *c, Monitor *m)$/;"	f	typeref:typename:void
sendmon	dwm_back.c	/^sendmon(Client *c, Monitor *m)$/;"	f	typeref:typename:void
setclientstate	.dwm_backup.c	/^setclientstate(Client *c, long state)$/;"	f	typeref:typename:void
setclientstate	dwm.c	/^setclientstate(Client *c, long state)$/;"	f	typeref:typename:void
setclientstate	dwm_back.c	/^setclientstate(Client *c, long state)$/;"	f	typeref:typename:void
setfocus	.dwm_backup.c	/^setfocus(Client *c)$/;"	f	typeref:typename:void
setfocus	dwm.c	/^setfocus(Client *c)$/;"	f	typeref:typename:void
setfocus	dwm_back.c	/^setfocus(Client *c)$/;"	f	typeref:typename:void
setfullscreen	.dwm_backup.c	/^setfullscreen(Client *c, int fullscreen)$/;"	f	typeref:typename:void
setfullscreen	dwm.c	/^setfullscreen(Client *c, int fullscreen)$/;"	f	typeref:typename:void
setfullscreen	dwm_back.c	/^setfullscreen(Client *c, int fullscreen)$/;"	f	typeref:typename:void
setgaps	.dwm_backup.c	/^setgaps(const Arg *arg)$/;"	f	typeref:typename:void
setgaps	dwm.c	/^setgaps(const Arg *arg)$/;"	f	typeref:typename:void
setgaps	dwm_back.c	/^setgaps(const Arg *arg)$/;"	f	typeref:typename:void
setlayout	.dwm_backup.c	/^setlayout(const Arg *arg)$/;"	f	typeref:typename:void
setlayout	dwm.c	/^setlayout(const Arg *arg)$/;"	f	typeref:typename:void
setlayout	dwm_back.c	/^setlayout(const Arg *arg)$/;"	f	typeref:typename:void
setmfact	.dwm_backup.c	/^setmfact(const Arg *arg)$/;"	f	typeref:typename:void
setmfact	dwm.c	/^setmfact(const Arg *arg)$/;"	f	typeref:typename:void
setmfact	dwm_back.c	/^setmfact(const Arg *arg)$/;"	f	typeref:typename:void
setup	.dwm_backup.c	/^setup(void)$/;"	f	typeref:typename:void
setup	dmenu/dmenu.c	/^setup(void)$/;"	f	typeref:typename:void	file:
setup	dmenu/dmenu_reserve.h	/^setup(void)$/;"	f	typeref:typename:void
setup	dwm.c	/^setup(void)$/;"	f	typeref:typename:void
setup	dwm_back.c	/^setup(void)$/;"	f	typeref:typename:void
seturgent	.dwm_backup.c	/^seturgent(Client *c, int urg)$/;"	f	typeref:typename:void
seturgent	dwm.c	/^seturgent(Client *c, int urg)$/;"	f	typeref:typename:void
seturgent	dwm_back.c	/^seturgent(Client *c, int urg)$/;"	f	typeref:typename:void
sh	.dwm_backup.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
sh	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
sh	dwm_back.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
showbar	.dwm_backup.c	/^  int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
showbar	config.def.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	config.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	config_bak.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
showbar	dwm.c	/^  int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
showbar	dwm_back.c	/^  int showbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
showhide	.dwm_backup.c	/^showhide(Client *c)$/;"	f	typeref:typename:void
showhide	dwm.c	/^showhide(Client *c)$/;"	f	typeref:typename:void
showhide	dwm_back.c	/^showhide(Client *c)$/;"	f	typeref:typename:void
sigchld	.dwm_backup.c	/^sigchld(int unused)$/;"	f	typeref:typename:void
sigchld	dwm.c	/^sigchld(int unused)$/;"	f	typeref:typename:void
sigchld	dwm_back.c	/^sigchld(int unused)$/;"	f	typeref:typename:void
slock	config.h	/^static const char *slock[]      = { "slock", NULL };$/;"	v	typeref:typename:const char * []
snap	config.def.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snap	config.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snap	config_bak.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
snext	.dwm_backup.c	/^  Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:
snext	dwm.c	/^  Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:
snext	dwm_back.c	/^  Client *snext;$/;"	m	struct:Client	typeref:typename:Client *	file:
spawn	.dwm_backup.c	/^spawn(const Arg *arg)$/;"	f	typeref:typename:void
spawn	dwm.c	/^spawn(const Arg *arg)$/;"	f	typeref:typename:void
spawn	dwm_back.c	/^spawn(const Arg *arg)$/;"	f	typeref:typename:void
stack	.dwm_backup.c	/^  Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
stack	dwm.c	/^  Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
stack	dwm_back.c	/^  Client *stack;$/;"	m	struct:Monitor	typeref:typename:Client *	file:
stest	dmenu/Makefile	/^stest: stest.o$/;"	t
stext	.dwm_backup.c	/^static char stext[256];$/;"	v	typeref:typename:char[256]	file:
stext	dwm.c	/^static char stext[256];$/;"	v	typeref:typename:char[256]	file:
stext	dwm_back.c	/^static char stext[256];$/;"	v	typeref:typename:char[256]	file:
sw	.dwm_backup.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
sw	dwm.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
sw	dwm_back.c	/^static int sw, sh;           \/* X display screen geometry width, height *\/$/;"	v	typeref:typename:int	file:
symbol	.dwm_backup.c	/^  const char *symbol;$/;"	m	struct:__anon4aab02610908	typeref:typename:const char *	file:
symbol	dwm.c	/^  const char *symbol;$/;"	m	struct:__anon0f53a99e0908	typeref:typename:const char *	file:
symbol	dwm_back.c	/^  const char *symbol;$/;"	m	struct:__anon0438348e0908	typeref:typename:const char *	file:
tag	.dwm_backup.c	/^tag(const Arg *arg)$/;"	f	typeref:typename:void
tag	dwm.c	/^tag(const Arg *arg)$/;"	f	typeref:typename:void
tag	dwm_back.c	/^tag(const Arg *arg)$/;"	f	typeref:typename:void
tagmon	.dwm_backup.c	/^tagmon(const Arg *arg)$/;"	f	typeref:typename:void
tagmon	dwm.c	/^tagmon(const Arg *arg)$/;"	f	typeref:typename:void
tagmon	dwm_back.c	/^tagmon(const Arg *arg)$/;"	f	typeref:typename:void
tags	.dwm_backup.c	/^  unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:
tags	.dwm_backup.c	/^  unsigned int tags;$/;"	m	struct:__anon4aab02610a08	typeref:typename:unsigned int	file:
tags	config.def.h	/^static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };$/;"	v	typeref:typename:const char * []
tags	config.h	/^static const char *tags[] = { "○", "○", "○", "○", "○", "○", "○", "○", "○" };$/;"	v	typeref:typename:const char * []
tags	config_bak.h	/^static const char *tags[] = { "WWW", "DEV", "SYS", "GFX", "VBX", "ETC", "ETC", "ETC", "ETC" };$/;"	v	typeref:typename:const char * []
tags	dwm.c	/^  unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:
tags	dwm.c	/^  unsigned int tags;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:unsigned int	file:
tags	dwm_back.c	/^  unsigned int tags;$/;"	m	struct:Client	typeref:typename:unsigned int	file:
tags	dwm_back.c	/^  unsigned int tags;$/;"	m	struct:__anon0438348e0a08	typeref:typename:unsigned int	file:
tagset	.dwm_backup.c	/^  unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:
tagset	dwm.c	/^  unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:
tagset	dwm_back.c	/^  unsigned int tagset[2];$/;"	m	struct:Monitor	typeref:typename:unsigned int[2]	file:
termcmd	config.def.h	/^static const char *termcmd[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
termcmd	config.h	/^static const char *termcmd[]    = { "st", NULL };$/;"	v	typeref:typename:const char * []
termcmd	config_bak.h	/^static const char *termcmd[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
test	dmenu/stest.c	/^test(const char *path, const char *name)$/;"	f	typeref:typename:void	file:
text	dmenu/dmenu.c	/^	char *text;$/;"	m	struct:item	typeref:typename:char *	file:
text	dmenu/dmenu.c	/^static char text[BUFSIZ] = "";$/;"	v	typeref:typename:char[]	file:
text	dmenu/dmenu_reserve.h	/^	char *text;$/;"	m	struct:item	typeref:typename:char *
text	dmenu/dmenu_reserve.h	/^static char text[BUFSIZ] = "";$/;"	v	typeref:typename:char[]
tile	.dwm_backup.c	/^tile(Monitor *m)$/;"	f	typeref:typename:void
tile	dwm.c	/^tile(Monitor *m)$/;"	f	typeref:typename:void
tile	dwm_back.c	/^tile(Monitor *m)$/;"	f	typeref:typename:void
title	.dwm_backup.c	/^  const char *title;$/;"	m	struct:__anon4aab02610a08	typeref:typename:const char *	file:
title	dwm.c	/^  const char *title;$/;"	m	struct:__anon0f53a99e0a08	typeref:typename:const char *	file:
title	dwm_back.c	/^  const char *title;$/;"	m	struct:__anon0438348e0a08	typeref:typename:const char *	file:
togglebar	.dwm_backup.c	/^togglebar(const Arg *arg)$/;"	f	typeref:typename:void
togglebar	dwm.c	/^togglebar(const Arg *arg)$/;"	f	typeref:typename:void
togglebar	dwm_back.c	/^togglebar(const Arg *arg)$/;"	f	typeref:typename:void
togglefloating	.dwm_backup.c	/^togglefloating(const Arg *arg)$/;"	f	typeref:typename:void
togglefloating	dwm.c	/^togglefloating(const Arg *arg)$/;"	f	typeref:typename:void
togglefloating	dwm_back.c	/^togglefloating(const Arg *arg)$/;"	f	typeref:typename:void
togglefullscr	.dwm_backup.c	/^togglefullscr(const Arg *arg)$/;"	f	typeref:typename:void
togglefullscr	dwm.c	/^togglefullscr(const Arg *arg)$/;"	f	typeref:typename:void
togglefullscr	dwm_back.c	/^togglefullscr(const Arg *arg)$/;"	f	typeref:typename:void
toggletag	.dwm_backup.c	/^toggletag(const Arg *arg)$/;"	f	typeref:typename:void
toggletag	dwm.c	/^toggletag(const Arg *arg)$/;"	f	typeref:typename:void
toggletag	dwm_back.c	/^toggletag(const Arg *arg)$/;"	f	typeref:typename:void
toggleview	.dwm_backup.c	/^toggleview(const Arg *arg)$/;"	f	typeref:typename:void
toggleview	dwm.c	/^toggleview(const Arg *arg)$/;"	f	typeref:typename:void
toggleview	dwm_back.c	/^toggleview(const Arg *arg)$/;"	f	typeref:typename:void
topbar	.dwm_backup.c	/^  int topbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
topbar	config.def.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	config.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	config_bak.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
topbar	dmenu/config.def.h	/^static int topbar = 1;                      \/* -b  option; if 0, dmenu appears at bottom     *\/$/;"	v	typeref:typename:int
topbar	dmenu/config.h	/^static int topbar = 1;                      \/* -b  option; if 0, dmenu appears at bottom     *\/$/;"	v	typeref:typename:int
topbar	dwm.c	/^  int topbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
topbar	dwm_back.c	/^  int topbar;$/;"	m	struct:Monitor	typeref:typename:int	file:
ui	.dwm_backup.c	/^  unsigned int ui;$/;"	m	union:__anon4aab0261060a	typeref:typename:unsigned int	file:
ui	dwm.c	/^  unsigned int ui;$/;"	m	union:__anon0f53a99e060a	typeref:typename:unsigned int	file:
ui	dwm_back.c	/^  unsigned int ui;$/;"	m	union:__anon0438348e060a	typeref:typename:unsigned int	file:
unfocus	.dwm_backup.c	/^unfocus(Client *c, int setfocus)$/;"	f	typeref:typename:void
unfocus	dwm.c	/^unfocus(Client *c, int setfocus)$/;"	f	typeref:typename:void
unfocus	dwm_back.c	/^unfocus(Client *c, int setfocus)$/;"	f	typeref:typename:void
uninstall	Makefile	/^uninstall:$/;"	t
uninstall	dmenu/Makefile	/^uninstall:$/;"	t
unmanage	.dwm_backup.c	/^unmanage(Client *c, int destroyed)$/;"	f	typeref:typename:void
unmanage	dwm.c	/^unmanage(Client *c, int destroyed)$/;"	f	typeref:typename:void
unmanage	dwm_back.c	/^unmanage(Client *c, int destroyed)$/;"	f	typeref:typename:void
unmapnotify	.dwm_backup.c	/^unmapnotify(XEvent *e)$/;"	f	typeref:typename:void
unmapnotify	dwm.c	/^unmapnotify(XEvent *e)$/;"	f	typeref:typename:void
unmapnotify	dwm_back.c	/^unmapnotify(XEvent *e)$/;"	f	typeref:typename:void
updatebarpos	.dwm_backup.c	/^updatebarpos(Monitor *m)$/;"	f	typeref:typename:void
updatebarpos	dwm.c	/^updatebarpos(Monitor *m)$/;"	f	typeref:typename:void
updatebarpos	dwm_back.c	/^updatebarpos(Monitor *m)$/;"	f	typeref:typename:void
updatebars	.dwm_backup.c	/^updatebars(void)$/;"	f	typeref:typename:void
updatebars	dwm.c	/^updatebars(void)$/;"	f	typeref:typename:void
updatebars	dwm_back.c	/^updatebars(void)$/;"	f	typeref:typename:void
updateclientlist	.dwm_backup.c	/^updateclientlist()$/;"	f	typeref:typename:void
updateclientlist	dwm.c	/^updateclientlist()$/;"	f	typeref:typename:void
updateclientlist	dwm_back.c	/^updateclientlist()$/;"	f	typeref:typename:void
updategeom	.dwm_backup.c	/^updategeom(void)$/;"	f	typeref:typename:int
updategeom	dwm.c	/^updategeom(void)$/;"	f	typeref:typename:int
updategeom	dwm_back.c	/^updategeom(void)$/;"	f	typeref:typename:int
updatenumlockmask	.dwm_backup.c	/^updatenumlockmask(void)$/;"	f	typeref:typename:void
updatenumlockmask	dwm.c	/^updatenumlockmask(void)$/;"	f	typeref:typename:void
updatenumlockmask	dwm_back.c	/^updatenumlockmask(void)$/;"	f	typeref:typename:void
updatesizehints	.dwm_backup.c	/^updatesizehints(Client *c)$/;"	f	typeref:typename:void
updatesizehints	dwm.c	/^updatesizehints(Client *c)$/;"	f	typeref:typename:void
updatesizehints	dwm_back.c	/^updatesizehints(Client *c)$/;"	f	typeref:typename:void
updatestatus	.dwm_backup.c	/^updatestatus(void)$/;"	f	typeref:typename:void
updatestatus	dwm.c	/^updatestatus(void)$/;"	f	typeref:typename:void
updatestatus	dwm_back.c	/^updatestatus(void)$/;"	f	typeref:typename:void
updatetitle	.dwm_backup.c	/^updatetitle(Client *c)$/;"	f	typeref:typename:void
updatetitle	dwm.c	/^updatetitle(Client *c)$/;"	f	typeref:typename:void
updatetitle	dwm_back.c	/^updatetitle(Client *c)$/;"	f	typeref:typename:void
updatewindowtype	.dwm_backup.c	/^updatewindowtype(Client *c)$/;"	f	typeref:typename:void
updatewindowtype	dwm.c	/^updatewindowtype(Client *c)$/;"	f	typeref:typename:void
updatewindowtype	dwm_back.c	/^updatewindowtype(Client *c)$/;"	f	typeref:typename:void
updatewmhints	.dwm_backup.c	/^updatewmhints(Client *c)$/;"	f	typeref:typename:void
updatewmhints	dwm.c	/^updatewmhints(Client *c)$/;"	f	typeref:typename:void
updatewmhints	dwm_back.c	/^updatewmhints(Client *c)$/;"	f	typeref:typename:void
usage	dmenu/dmenu.c	/^usage(void)$/;"	f	typeref:typename:void	file:
usage	dmenu/dmenu_reserve.h	/^usage(void)$/;"	f	typeref:typename:void
usage	dmenu/stest.c	/^usage(void)$/;"	f	typeref:typename:void	file:
utf8	dmenu/dmenu.c	/^static Atom clip, utf8;$/;"	v	typeref:typename:Atom	file:
utf8	dmenu/dmenu_reserve.h	/^static Atom clip, utf8;$/;"	v	typeref:typename:Atom
utf8decode	dmenu/drw.c	/^utf8decode(const char *c, long *u, size_t clen)$/;"	f	typeref:typename:size_t	file:
utf8decode	drw.c	/^utf8decode(const char *c, long *u, size_t clen)$/;"	f	typeref:typename:size_t	file:
utf8decodebyte	dmenu/drw.c	/^utf8decodebyte(const char c, size_t *i)$/;"	f	typeref:typename:long	file:
utf8decodebyte	drw.c	/^utf8decodebyte(const char c, size_t *i)$/;"	f	typeref:typename:long	file:
utf8validate	dmenu/drw.c	/^utf8validate(long *u, size_t i)$/;"	f	typeref:typename:size_t	file:
utf8validate	drw.c	/^utf8validate(long *u, size_t i)$/;"	f	typeref:typename:size_t	file:
utfbyte	dmenu/drw.c	/^static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:const unsigned char[]	file:
utfbyte	drw.c	/^static const unsigned char utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmask	dmenu/drw.c	/^static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmask	drw.c	/^static const unsigned char utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:const unsigned char[]	file:
utfmax	dmenu/drw.c	/^static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:const long[]	file:
utfmax	drw.c	/^static const long utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:const long[]	file:
utfmin	dmenu/drw.c	/^static const long utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	typeref:typename:const long[]	file:
utfmin	drw.c	/^static const long utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	typeref:typename:const long[]	file:
v	.dwm_backup.c	/^  const void *v;$/;"	m	union:__anon4aab0261060a	typeref:typename:const void *	file:
v	dwm.c	/^  const void *v;$/;"	m	union:__anon0f53a99e060a	typeref:typename:const void *	file:
v	dwm_back.c	/^  const void *v;$/;"	m	union:__anon0438348e060a	typeref:typename:const void *	file:
view	.dwm_backup.c	/^view(const Arg *arg)$/;"	f	typeref:typename:void
view	dwm.c	/^view(const Arg *arg)$/;"	f	typeref:typename:void
view	dwm_back.c	/^view(const Arg *arg)$/;"	f	typeref:typename:void
w	.dwm_backup.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
w	dmenu/drw.h	/^	unsigned int w, h;$/;"	m	struct:__anond8d4be500308	typeref:typename:unsigned int
w	drw.h	/^	unsigned int w, h;$/;"	m	struct:__anon0f5116480308	typeref:typename:unsigned int
w	dwm.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
w	dwm_back.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
wh	.dwm_backup.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wh	dwm.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wh	dwm_back.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
win	.dwm_backup.c	/^  Window win;$/;"	m	struct:Client	typeref:typename:Window	file:
win	dmenu/dmenu.c	/^static Window root, parentwin, win;$/;"	v	typeref:typename:Window	file:
win	dmenu/dmenu_reserve.h	/^static Window root, parentwin, win;$/;"	v	typeref:typename:Window
win	dwm.c	/^  Window win;$/;"	m	struct:Client	typeref:typename:Window	file:
win	dwm_back.c	/^  Window win;$/;"	m	struct:Client	typeref:typename:Window	file:
wintoclient	.dwm_backup.c	/^wintoclient(Window w)$/;"	f	typeref:typename:Client *
wintoclient	dwm.c	/^wintoclient(Window w)$/;"	f	typeref:typename:Client *
wintoclient	dwm_back.c	/^wintoclient(Window w)$/;"	f	typeref:typename:Client *
wintomon	.dwm_backup.c	/^wintomon(Window w)$/;"	f	typeref:typename:Monitor *
wintomon	dwm.c	/^wintomon(Window w)$/;"	f	typeref:typename:Monitor *
wintomon	dwm_back.c	/^wintomon(Window w)$/;"	f	typeref:typename:Monitor *
wmatom	.dwm_backup.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
wmatom	dwm.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
wmatom	dwm_back.c	/^static Atom wmatom[WMLast], netatom[NetLast];$/;"	v	typeref:typename:Atom[]	file:
wmcheckwin	.dwm_backup.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
wmcheckwin	dwm.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
wmcheckwin	dwm_back.c	/^static Window root, wmcheckwin;$/;"	v	typeref:typename:Window	file:
worddelimiters	dmenu/config.def.h	/^static const char worddelimiters[] = " ";$/;"	v	typeref:typename:const char[]
worddelimiters	dmenu/config.h	/^static const char worddelimiters[] = " ";$/;"	v	typeref:typename:const char[]
ww	.dwm_backup.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
ww	dwm.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
ww	dwm_back.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wx	.dwm_backup.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wx	dwm.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wx	dwm_back.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wy	.dwm_backup.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wy	dwm.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
wy	dwm_back.c	/^  int wx, wy, ww, wh;   \/* window area  *\/$/;"	m	struct:Monitor	typeref:typename:int	file:
x	.dwm_backup.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
x	dwm.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
x	dwm_back.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
xerror	.dwm_backup.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerror	dwm.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerror	dwm_back.c	/^xerror(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrordummy	.dwm_backup.c	/^xerrordummy(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrordummy	dwm.c	/^xerrordummy(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrordummy	dwm_back.c	/^xerrordummy(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorstart	.dwm_backup.c	/^xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorstart	dwm.c	/^xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorstart	dwm_back.c	/^xerrorstart(Display *dpy, XErrorEvent *ee)$/;"	f	typeref:typename:int
xerrorxlib	.dwm_backup.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xerrorxlib	dwm.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xerrorxlib	dwm_back.c	/^static int (*xerrorxlib)(Display *, XErrorEvent *);$/;"	v	typeref:typename:int (*)(Display *,XErrorEvent *)	file:
xfont	dmenu/drw.h	/^	XftFont *xfont;$/;"	m	struct:Fnt	typeref:typename:XftFont *
xfont	drw.h	/^	XftFont *xfont;$/;"	m	struct:Fnt	typeref:typename:XftFont *
xfont_create	dmenu/drw.c	/^xfont_create(Drw *drw, const char *fontname, FcPattern *fontpattern)$/;"	f	typeref:typename:Fnt *	file:
xfont_create	drw.c	/^xfont_create(Drw *drw, const char *fontname, FcPattern *fontpattern)$/;"	f	typeref:typename:Fnt *	file:
xfont_free	dmenu/drw.c	/^xfont_free(Fnt *font)$/;"	f	typeref:typename:void	file:
xfont_free	drw.c	/^xfont_free(Fnt *font)$/;"	f	typeref:typename:void	file:
xic	dmenu/dmenu.c	/^static XIC xic;$/;"	v	typeref:typename:XIC	file:
xic	dmenu/dmenu_reserve.h	/^static XIC xic;$/;"	v	typeref:typename:XIC
y	.dwm_backup.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
y	dwm.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
y	dwm_back.c	/^  int x, y, w, h;$/;"	m	struct:Client	typeref:typename:int	file:
zoom	.dwm_backup.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void
zoom	dwm.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void
zoom	dwm_back.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void
